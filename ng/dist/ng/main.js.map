{"version":3,"sources":["./projects/gonggooglecharts/src/lib/dependency-presentation/dependency-presentation.component.html","./projects/gonggooglecharts/src/lib/dependency-presentation/dependency-presentation.component.ts","./projects/gonggooglecharts/src/lib/dependencys-table/dependencys-table.component.ts","./projects/gonggooglecharts/src/lib/dependencys-table/dependencys-table.component.html","./projects/gonggooglechartspecific/src/lib/gonggooglechartspecific.component.ts","./projects/gonggooglecharts/src/lib/app-routing.module.ts","./projects/gonggooglecharts/src/lib/push_from_front_nb.service.ts","./projects/gonggooglecharts/src/lib/task-presentation/task-presentation.component.html","./projects/gonggooglecharts/src/lib/task-presentation/task-presentation.component.ts","./projects/gonggooglecharts/src/lib/ressource-sorting/ressource-sorting.component.ts","./projects/gonggooglecharts/src/lib/ressource-sorting/ressource-sorting.component.html","./projects/gonggooglecharts/src/lib/task-sorting/task-sorting.component.ts","./projects/gonggooglecharts/src/lib/task-sorting/task-sorting.component.html","./src/environments/environment.ts","./projects/gonggooglecharts/src/lib/task.service.ts","./projects/gonggooglecharts/src/lib/front-repo.service.ts","./projects/gonggooglecharts/src/lib/dependency-db.ts","./projects/gonggooglecharts/src/lib/ressource-detail/ressource-detail.component.ts","./projects/gonggooglecharts/src/lib/ressource-detail/ressource-detail.component.html","./projects/gonggooglecharts/src/lib/gonggooglecharts.module.ts","./projects/gonggooglecharts/src/lib/ganttchart-detail/ganttchart-detail.component.ts","./projects/gonggooglecharts/src/lib/ganttchart-detail/ganttchart-detail.component.html","./projects/gonggooglecharts/src/lib/ressource-presentation/ressource-presentation.component.html","./projects/gonggooglecharts/src/lib/ressource-presentation/ressource-presentation.component.ts","./projects/gonggooglecharts/src/lib/splitter/splitter.component.ts","./projects/gonggooglecharts/src/lib/splitter/splitter.component.html","./projects/gonggooglecharts/src/lib/ressource.service.ts","./projects/gonggooglecharts/src/lib/ganttchart-presentation/ganttchart-presentation.component.html","./projects/gonggooglecharts/src/lib/ganttchart-presentation/ganttchart-presentation.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./projects/gonggooglecharts/src/lib/ganttchart.service.ts","./projects/gonggooglecharts/src/lib/map-components.ts","./src/app/app.module.ts","./projects/gonggooglecharts/src/lib/sidebar/sidebar.component.ts","./projects/gonggooglecharts/src/lib/sidebar/sidebar.component.html","./projects/gonggooglechartspecific/src/lib/ganttchart/ganttchart.component.ts","./projects/gonggooglechartspecific/src/lib/ganttchart/ganttchart.component.html","./projects/gonggooglecharts/src/lib/dependency.service.ts","./projects/gonggooglecharts/src/lib/ressources-table/ressources-table.component.ts","./projects/gonggooglecharts/src/lib/ressources-table/ressources-table.component.html","./projects/gonggooglecharts/src/lib/ressource-db.ts","./projects/gonggooglecharts/src/lib/task-detail/task-detail.component.ts","./projects/gonggooglecharts/src/lib/task-detail/task-detail.component.html","./projects/gonggooglechartspecific/src/public-api.ts","./projects/gonggooglechartspecific/src/lib/gonggooglechartspecific.service.ts","./projects/gonggooglechartspecific/src/lib/gonggooglechartspecific.module.ts","./projects/gonggooglecharts/src/lib/commitnb.service.ts","./projects/gonggooglecharts/src/lib/dependency-detail/dependency-detail.component.ts","./projects/gonggooglecharts/src/lib/dependency-detail/dependency-detail.component.html","./projects/gonggooglecharts/src/lib/ganttchart-sorting/ganttchart-sorting.component.ts","./projects/gonggooglecharts/src/lib/ganttchart-sorting/ganttchart-sorting.component.html","./projects/gonggooglecharts/src/lib/task-db.ts","./projects/gonggooglecharts/src/lib/ganttcharts-table/ganttcharts-table.component.ts","./projects/gonggooglecharts/src/lib/ganttcharts-table/ganttcharts-table.component.html","./projects/gonggooglecharts/src/lib/dependency-sorting/dependency-sorting.component.ts","./projects/gonggooglecharts/src/lib/dependency-sorting/dependency-sorting.component.html","./projects/gonggooglecharts/src/lib/tasks-table/tasks-table.component.ts","./projects/gonggooglecharts/src/lib/tasks-table/tasks-table.component.html","./projects/gonggooglecharts/src/lib/ganttchart-db.ts","./projects/gonggooglecharts/src/public-api.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n<div class=\"presentation__header\" (click)=\"setEditorRouterOutlet(dependency.ID)\">\n    <h1>Dependency's fields <span class=\"material-icons\">edit</span></h1>\n</div>\n<table *ngIf=\"dependency\" class=\"presentation__table mat-table\">\n    <tr class=\"mat-header-row\">\n        <th class=\"mat-header-cell\">Name</th>\n        <th class=\"mat-header-cell\">Value</th>\n    </tr>\n    <!-- insertion point for fields specific code -->\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Name</td>\n        <td class=\"mat-cell\">{{dependency.Name}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Task</td>\n        <td class=\"mat-cell\">{{dependency.Task ? dependency.Task.Name : \"\"}}</td>\n    </tr>\n</table>\n<!-- hack to force loading of mat table style an error is generated but it is a know angular issue https://github.com/angular/components/issues/10941 -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Position Column -->\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { DependencyDB } from '../dependency-db'\nimport { DependencyService } from '../dependency.service'\n\nimport { FrontRepoService, FrontRepo } from '../front-repo.service'\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nexport interface dependencyDummyElement {\n}\n\nconst ELEMENT_DATA: dependencyDummyElement[] = [\n];\n\n@Component({\n\tselector: 'app-dependency-presentation',\n\ttemplateUrl: './dependency-presentation.component.html',\n\tstyleUrls: ['./dependency-presentation.component.css'],\n})\nexport class DependencyPresentationComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\tdisplayedColumns: string[] = [];\n\tdataSource = ELEMENT_DATA;\n\n\tdependency: DependencyDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n \n\tconstructor(\n\t\tprivate dependencyService: DependencyService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function () {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tngOnInit(): void {\n\t\tthis.getDependency();\n\n\t\t// observable for changes in \n\t\tthis.dependencyService.DependencyServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"update\") {\n\t\t\t\t\tthis.getDependency()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tgetDependency(): void {\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tthis.dependency = this.frontRepo.Dependencys.get(id)\n\n\t\t\t\t// insertion point for recovery of durations\n\t\t\t}\n\t\t);\n\t}\n\n\t// set presentation outlet\n\tsetPresentationRouterOutlet(structName: string, ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + structName + \"-presentation\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n\n\t// set editor outlet\n\tsetEditorRouterOutlet(ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"dependency-detail\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n}\n","// generated by gong\nimport { Component, OnInit, AfterViewInit, ViewChild, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatButton } from '@angular/material/button'\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData, FrontRepoService, FrontRepo, NullInt64, SelectionMode } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nconst allowMultiSelect = true;\n\nimport { Router, RouterState } from '@angular/router';\nimport { DependencyDB } from '../dependency-db'\nimport { DependencyService } from '../dependency.service'\n\n// TableComponent is initilizaed from different routes\n// TableComponentMode detail different cases \nenum TableComponentMode {\n  DISPLAY_MODE,\n  ONE_MANY_ASSOCIATION_MODE,\n  MANY_MANY_ASSOCIATION_MODE,\n}\n\n// generated table component\n@Component({\n  selector: 'app-dependencystable',\n  templateUrl: './dependencys-table.component.html',\n  styleUrls: ['./dependencys-table.component.css'],\n})\nexport class DependencysTableComponent implements OnInit {\n\n  // mode at invocation\n  mode: TableComponentMode\n\n  // used if the component is called as a selection component of Dependency instances\n  selection: SelectionModel<DependencyDB>;\n  initialSelection = new Array<DependencyDB>();\n\n  // the data source for the table\n  dependencys: DependencyDB[];\n  matTableDataSource: MatTableDataSource<DependencyDB>\n\n  // front repo, that will be referenced by this.dependencys\n  frontRepo: FrontRepo\n\n  // displayedColumns is referenced by the MatTable component for specify what columns\n  // have to be displayed and in what order\n  displayedColumns: string[];\n\n  // for sorting & pagination\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n\n    // enable sorting on all fields (including pointers and reverse pointer)\n    this.matTableDataSource.sortingDataAccessor = (dependencyDB: DependencyDB, property: string) => {\n      switch (property) {\n        // insertion point for specific sorting accessor\n        case 'Name':\n          return dependencyDB.Name;\n\n        case 'Task':\n          return (dependencyDB.Task ? dependencyDB.Task.Name : '');\n\n        case 'Task_Dependencies':\n          return this.frontRepo.Tasks.get(dependencyDB.Task_DependenciesDBID.Int64)?.Name;\n\n        default:\n          return DependencyDB[property];\n      }\n    };\n\n    // enable filtering on all fields (including pointers and reverse pointer, which is not done by default)\n    this.matTableDataSource.filterPredicate = (dependencyDB: DependencyDB, filter: string) => {\n\n      // filtering is based on finding a lower case filter into a concatenated string\n      // the dependencyDB properties\n      let mergedContent = \"\"\n\n      // insertion point for merging of fields\n      mergedContent += dependencyDB.Name.toLowerCase()\n      if (dependencyDB.Task) {\n        mergedContent += dependencyDB.Task.Name.toLowerCase()\n      }\n      if (dependencyDB.Task_DependenciesDBID.Int64 != 0) {\n        mergedContent += this.frontRepo.Tasks.get(dependencyDB.Task_DependenciesDBID.Int64)?.Name.toLowerCase()\n      }\n\n\n      let isSelected = mergedContent.includes(filter.toLowerCase())\n      return isSelected\n    };\n\n    this.matTableDataSource.sort = this.sort;\n    this.matTableDataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.matTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(\n    private dependencyService: DependencyService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of dependency instances\n    public dialogRef: MatDialogRef<DependencysTableComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n\n    // compute mode\n    if (dialogData == undefined) {\n      this.mode = TableComponentMode.DISPLAY_MODE\n    } else {\n      switch (dialogData.SelectionMode) {\n        case SelectionMode.ONE_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.ONE_MANY_ASSOCIATION_MODE\n          break\n        case SelectionMode.MANY_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.MANY_MANY_ASSOCIATION_MODE\n          break\n        default:\n      }\n    }\n\n    // observable for changes in structs\n    this.dependencyService.DependencyServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.getDependencys()\n        }\n      }\n    )\n    if (this.mode == TableComponentMode.DISPLAY_MODE) {\n      this.displayedColumns = ['ID', 'Edit', 'Delete', // insertion point for columns to display\n        \"Name\",\n        \"Task\",\n        \"Task_Dependencies\",\n      ]\n    } else {\n      this.displayedColumns = ['select', 'ID', // insertion point for columns to display\n        \"Name\",\n        \"Task\",\n        \"Task_Dependencies\",\n      ]\n      this.selection = new SelectionModel<DependencyDB>(allowMultiSelect, this.initialSelection);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getDependencys()\n    this.matTableDataSource = new MatTableDataSource(this.dependencys)\n  }\n\n  getDependencys(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        this.dependencys = this.frontRepo.Dependencys_array;\n\n        // insertion point for variables Recoveries\n\n        // in case the component is called as a selection component\n        if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n          this.dependencys.forEach(\n            dependency => {\n              let ID = this.dialogData.ID\n              let revPointer = dependency[this.dialogData.ReversePointer]\n              if (revPointer.Int64 == ID) {\n                this.initialSelection.push(dependency)\n              }\n            }\n          )\n          this.selection = new SelectionModel<DependencyDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n          let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n          let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n          if (sourceInstance[this.dialogData.SourceField]) {\n            for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n              let dependency = associationInstance[this.dialogData.IntermediateStructField]\n              this.initialSelection.push(dependency)\n            }\n          }\n          this.selection = new SelectionModel<DependencyDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        // update the mat table data source\n        this.matTableDataSource.data = this.dependencys\n      }\n    )\n  }\n\n  // newDependency initiate a new dependency\n  // create a new Dependency objet\n  newDependency() {\n  }\n\n  deleteDependency(dependencyID: number, dependency: DependencyDB) {\n    // list of dependencys is truncated of dependency before the delete\n    this.dependencys = this.dependencys.filter(h => h !== dependency);\n\n    this.dependencyService.deleteDependency(dependencyID).subscribe(\n      dependency => {\n        this.dependencyService.DependencyServiceChanged.next(\"delete\")\n      }\n    );\n  }\n\n  editDependency(dependencyID: number, dependency: DependencyDB) {\n\n  }\n\n  // display dependency in router\n  displayDependencyInRouter(dependencyID: number) {\n    this.router.navigate([\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"dependency-display\", dependencyID])\n  }\n\n  // set editor outlet\n  setEditorRouterOutlet(dependencyID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"dependency-detail\", dependencyID]\n      }\n    }]);\n  }\n\n  // set presentation outlet\n  setPresentationRouterOutlet(dependencyID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"dependency-presentation\", dependencyID]\n      }\n    }]);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dependencys.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dependencys.forEach(row => this.selection.select(row));\n  }\n\n  save() {\n\n    if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n\n      let toUpdate = new Set<DependencyDB>()\n\n      // reset all initial selection of dependency that belong to dependency\n      this.initialSelection.forEach(\n        dependency => {\n          dependency[this.dialogData.ReversePointer].Int64 = 0\n          dependency[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(dependency)\n        }\n      )\n\n      // from selection, set dependency that belong to dependency\n      this.selection.selected.forEach(\n        dependency => {\n          let ID = +this.dialogData.ID\n          dependency[this.dialogData.ReversePointer].Int64 = ID\n          dependency[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(dependency)\n        }\n      )\n\n      // update all dependency (only update selection & initial selection)\n      toUpdate.forEach(\n        dependency => {\n          this.dependencyService.updateDependency(dependency)\n            .subscribe(dependency => {\n              this.dependencyService.DependencyServiceChanged.next(\"update\")\n            });\n        }\n      )\n    }\n\n    if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n      let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n      let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n      // First, parse all instance of the association struct and remove the instance\n      // that have unselect\n      let unselectedDependency = new Set<number>()\n      for (let dependency of this.initialSelection) {\n        if (this.selection.selected.includes(dependency)) {\n          // console.log(\"dependency \" + dependency.Name + \" is still selected\")\n        } else {\n          console.log(\"dependency \" + dependency.Name + \" has been unselected\")\n          unselectedDependency.add(dependency.ID)\n          console.log(\"is unselected \" + unselectedDependency.has(dependency.ID))\n        }\n      }\n\n      // delete the association instance\n      if (sourceInstance[this.dialogData.SourceField]) {\n        for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n          let dependency = associationInstance[this.dialogData.IntermediateStructField]\n          if (unselectedDependency.has(dependency.ID)) {\n\n            this.frontRepoService.deleteService( this.dialogData.IntermediateStruct, associationInstance )\n          }\n        }\n      }\n\n      // is the source array is emptyn create it\n      if (sourceInstance[this.dialogData.SourceField] == undefined) {\n        sourceInstance[this.dialogData.SourceField] = new Array<any>()\n      }\n\n      // second, parse all instance of the selected\n      if (sourceInstance[this.dialogData.SourceField]) {\n        this.selection.selected.forEach(\n          dependency => {\n            if (!this.initialSelection.includes(dependency)) {\n              // console.log(\"dependency \" + dependency.Name + \" has been added to the selection\")\n\n              let associationInstance = {\n                Name: sourceInstance[\"Name\"] + \"-\" + dependency.Name,\n              }\n\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"] = new NullInt64\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Int64 = dependency.ID\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Valid = true\n\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"] = new NullInt64\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Int64 = sourceInstance[\"ID\"]\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Valid = true\n\n              this.frontRepoService.postService( this.dialogData.IntermediateStruct, associationInstance )\n\n            } else {\n              // console.log(\"dependency \" + dependency.Name + \" is still selected\")\n            }\n          }\n        )\n      }\n\n      // this.selection = new SelectionModel<DependencyDB>(allowMultiSelect, this.initialSelection);\n    }\n\n    // why pizza ?\n    this.dialogRef.close('Pizza!');\n  }\n}\n","<div>\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n    </mat-form-field>\n    <h1 *ngIf=\"dialogData\">dependency</h1>\n    <table class=\"table\" mat-table [dataSource]=\"matTableDataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <!-- insertion point for fields specific code -->\n        <!-- -->\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let Dependency\">\n                {{Dependency.Name}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Task\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Task </th>\n            <td mat-cell *matCellDef=\"let Dependency\">\n                {{ Dependency.Task ? Dependency.Task.Name : ''}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Task_Dependencies\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> <-- (Task) Dependencies </th>\n            <td mat-cell *matCellDef=\"let dependency\">\n                {{frontRepo.Tasks.get(dependency.Task_DependenciesDBID.Int64)?.Name}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ID\" sticky>\n            <th mat-header-cell *matHeaderCellDef> ID. </th>\n            <td mat-cell *matCellDef=\"let Dependency\"> {{Dependency.ID}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let dependency;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"setEditorRouterOutlet(dependency.ID)\">edit</i>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let dependency;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"deleteDependency(dependency.ID, dependency)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\n        <tr mat-row *matRowDef=\"\n        let row; \n        columns: displayedColumns;\n        \" (click)=\"setPresentationRouterOutlet( row.ID ) \" class=\"row-link\">\n        </tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100, 500, 1000]\" showFirstLastButtons></mat-paginator>\n</div>\n<button class=\"table__save\" color=\"primary\" *ngIf=\"dialogData\" mat-raised-button (click)=\"save()\">\n    Save\n</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-gonggooglechartspecific',\n  template: `\n    <p>\n      gonggooglechartspecific works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class GonggooglechartspecificComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// insertion point for imports\nimport { DependencysTableComponent } from './dependencys-table/dependencys-table.component'\nimport { DependencyDetailComponent } from './dependency-detail/dependency-detail.component'\nimport { DependencyPresentationComponent } from './dependency-presentation/dependency-presentation.component'\n\nimport { GanttChartsTableComponent } from './ganttcharts-table/ganttcharts-table.component'\nimport { GanttChartDetailComponent } from './ganttchart-detail/ganttchart-detail.component'\nimport { GanttChartPresentationComponent } from './ganttchart-presentation/ganttchart-presentation.component'\n\nimport { RessourcesTableComponent } from './ressources-table/ressources-table.component'\nimport { RessourceDetailComponent } from './ressource-detail/ressource-detail.component'\nimport { RessourcePresentationComponent } from './ressource-presentation/ressource-presentation.component'\n\nimport { TasksTableComponent } from './tasks-table/tasks-table.component'\nimport { TaskDetailComponent } from './task-detail/task-detail.component'\nimport { TaskPresentationComponent } from './task-presentation/task-presentation.component'\n\n\nconst routes: Routes = [ // insertion point for routes declarations\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependencys', component: DependencysTableComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_table' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependency-adder', component: DependencyDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependency-adder/:id/:originStruct/:originStructFieldName', component: DependencyDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependency-detail/:id', component: DependencyDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependency-presentation/:id', component: DependencyPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_presentation' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-dependency-presentation-special/:id', component: DependencyPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_godependencypres' },\n\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttcharts', component: GanttChartsTableComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_table' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttchart-adder', component: GanttChartDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttchart-adder/:id/:originStruct/:originStructFieldName', component: GanttChartDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttchart-detail/:id', component: GanttChartDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttchart-presentation/:id', component: GanttChartPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_presentation' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ganttchart-presentation-special/:id', component: GanttChartPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_goganttchartpres' },\n\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressources', component: RessourcesTableComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_table' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressource-adder', component: RessourceDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressource-adder/:id/:originStruct/:originStructFieldName', component: RessourceDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressource-detail/:id', component: RessourceDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressource-presentation/:id', component: RessourcePresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_presentation' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-ressource-presentation-special/:id', component: RessourcePresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_goressourcepres' },\n\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-tasks', component: TasksTableComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_table' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-task-adder', component: TaskDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-task-adder/:id/:originStruct/:originStructFieldName', component: TaskDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-task-detail/:id', component: TaskDetailComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_editor' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-task-presentation/:id', component: TaskPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_go_presentation' },\n\t{ path: 'github_com_fullstack_lang_gonggooglecharts_go-task-presentation-special/:id', component: TaskPresentationComponent, outlet: 'github_com_fullstack_lang_gonggooglecharts_gotaskpres' },\n\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PushFromFrontNbService {\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n\n    private commitNbUrl: string\n    constructor(\n        private http: HttpClient,\n        private location: Location,\n        @Inject(DOCUMENT) private document: Document\n    ) {\n        // path to the service share the same origin with the path to the document\n        // get the origin in the URL to the document\n        let origin = this.document.location.origin\n\n        // if debugging with ng, replace 4200 with 8080\n        origin = origin.replace(\"4200\", \"8080\")\n\n        // compute path to the service\n        this.commitNbUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/pushfromfrontnb';\n    }\n\n    // observable of the commit nb getter\n    public getPushFromFrontNb(): Observable<number> {\n        return this.http.get<number>(this.commitNbUrl)\n            .pipe(\n                tap(_ => this.log('fetched commit nb')),\n                catchError(this.handleError<number>('getPushFromFrontNb', -1))\n            );\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // TODO: better job of transforming error for user consumption\n            this.log('${operation} failed: ${error.message}');\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    private log(message: string) {\n\n    }\n}\n","\n<div class=\"presentation__header\" (click)=\"setEditorRouterOutlet(task.ID)\">\n    <h1>Task's fields <span class=\"material-icons\">edit</span></h1>\n</div>\n<table *ngIf=\"task\" class=\"presentation__table mat-table\">\n    <tr class=\"mat-header-row\">\n        <th class=\"mat-header-cell\">Name</th>\n        <th class=\"mat-header-cell\">Value</th>\n    </tr>\n    <!-- insertion point for fields specific code -->\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Name</td>\n        <td class=\"mat-cell\">{{task.Name}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">DisplayedName</td>\n        <td class=\"mat-cell\">{{task.DisplayedName}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Ressource</td>\n        <td class=\"mat-cell\">{{task.Ressource ? task.Ressource.Name : \"\"}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Start</td>\n        <td class=\"mat-cell\">{{task.Start}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">End</td>\n        <td class=\"mat-cell\">{{task.End}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Duration</td>\n        <td class=\"mat-cell\">{{Duration_Hours}}H {{Duration_Minutes}}M {{Duration_Seconds}}S</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">PercentComplete</td>\n        <td class=\"mat-cell\">{{task.PercentComplete}}</td>\n    </tr>\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Rank</td>\n        <td class=\"mat-cell\">{{task.Rank}}</td>\n    </tr>\n</table>\n<!-- hack to force loading of mat table style an error is generated but it is a know angular issue https://github.com/angular/components/issues/10941 -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Position Column -->\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { TaskDB } from '../task-db'\nimport { TaskService } from '../task.service'\n\nimport { FrontRepoService, FrontRepo } from '../front-repo.service'\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nexport interface taskDummyElement {\n}\n\nconst ELEMENT_DATA: taskDummyElement[] = [\n];\n\n@Component({\n\tselector: 'app-task-presentation',\n\ttemplateUrl: './task-presentation.component.html',\n\tstyleUrls: ['./task-presentation.component.css'],\n})\nexport class TaskPresentationComponent implements OnInit {\n\n\t// insertion point for declarations\n\t// fields from Duration\n\tDuration_Hours: number\n\tDuration_Minutes: number\n\tDuration_Seconds: number\n\n\tdisplayedColumns: string[] = [];\n\tdataSource = ELEMENT_DATA;\n\n\ttask: TaskDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n \n\tconstructor(\n\t\tprivate taskService: TaskService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function () {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tngOnInit(): void {\n\t\tthis.getTask();\n\n\t\t// observable for changes in \n\t\tthis.taskService.TaskServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"update\") {\n\t\t\t\t\tthis.getTask()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tgetTask(): void {\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tthis.task = this.frontRepo.Tasks.get(id)\n\n\t\t\t\t// insertion point for recovery of durations\n\t\t\t\t// computation of Hours, Minutes, Seconds for Duration\n\t\t\t\tthis.Duration_Hours = Math.floor(this.task.Duration / (3600 * 1000 * 1000 * 1000))\n\t\t\t\tthis.Duration_Minutes = Math.floor(this.task.Duration % (3600 * 1000 * 1000 * 1000) / (60 * 1000 * 1000 * 1000))\n\t\t\t\tthis.Duration_Seconds = this.task.Duration % (60 * 1000 * 1000 * 1000) / (1000 * 1000 * 1000)\n\t\t\t}\n\t\t);\n\t}\n\n\t// set presentation outlet\n\tsetPresentationRouterOutlet(structName: string, ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + structName + \"-presentation\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n\n\t// set editor outlet\n\tsetEditorRouterOutlet(ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"task-detail\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n}\n","// generated by gong\nimport { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { Router, RouterState } from '@angular/router';\nimport { RessourceDB } from '../ressource-db'\nimport { RessourceService } from '../ressource.service'\n\nimport { FrontRepoService, FrontRepo, NullInt64 } from '../front-repo.service'\n@Component({\n  selector: 'lib-ressource-sorting',\n  templateUrl: './ressource-sorting.component.html',\n  styleUrls: ['./ressource-sorting.component.css']\n})\nexport class RessourceSortingComponent implements OnInit {\n\n  frontRepo: FrontRepo\n\n  // array of Ressource instances that are in the association\n  associatedRessources = new Array<RessourceDB>();\n\n  constructor(\n    private ressourceService: RessourceService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of ressource instances\n    public dialogRef: MatDialogRef<RessourceSortingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.getRessources()\n  }\n\n  getRessources(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        let index = 0\n        for (let ressource of this.frontRepo.Ressources_array) {\n          let ID = this.dialogData.ID\n          let revPointerID = ressource[this.dialogData.ReversePointer]\n          let revPointerID_Index = ressource[this.dialogData.ReversePointer+\"_Index\"]\n          if (revPointerID.Int64 == ID) {\n            if (revPointerID_Index == undefined) {\n              revPointerID_Index = new NullInt64\n              revPointerID_Index.Valid = true\n              revPointerID_Index.Int64 = index++\n            }\n            this.associatedRessources.push(ressource)\n          }\n        }\n\n        // sort associated ressource according to order\n        this.associatedRessources.sort((t1, t2) => {\n          let t1_revPointerID_Index = t1[this.dialogData.ReversePointer+\"_Index\"]\n          let t2_revPointerID_Index = t2[this.dialogData.ReversePointer+\"_Index\"]\n          if (t1_revPointerID_Index && t2_revPointerID_Index) {\n            if (t1_revPointerID_Index.Int64 > t2_revPointerID_Index.Int64) {\n              return 1;\n            }\n            if (t1_revPointerID_Index.Int64 < t2_revPointerID_Index.Int64) {\n              return -1;\n            }  \n          }\n          return 0;\n        });\n      }\n    )\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.associatedRessources, event.previousIndex, event.currentIndex);\n\n    // set the order of Ressource instances\n    let index = 0\n    \n    for (let ressource of this.associatedRessources) {\n      let revPointerID_Index = ressource[this.dialogData.ReversePointer+\"_Index\"]\n      revPointerID_Index.Valid = true\n      revPointerID_Index.Int64 = index++\n    }\n  }\n\n  save() {\n\n    this.associatedRessources.forEach(\n      ressource => {\n        this.ressourceService.updateRessource(ressource)\n          .subscribe(ressource => {\n            this.ressourceService.RessourceServiceChanged.next(\"update\")\n          });\n      }\n    )\n\n    this.dialogRef.close('Sorting of '+ this.dialogData.ReversePointer+' done');\n  }\n}\n","<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n<div class=\"example-box\" *ngFor=\"let ressource of associatedRessources\" cdkDrag>{{ressource.Name}}</div>\n</div>\n<button class=\"table__save\" color=\"primary\" mat-raised-button (click)=\"save()\">\nSave\n</button>","// generated by gong\nimport { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { Router, RouterState } from '@angular/router';\nimport { TaskDB } from '../task-db'\nimport { TaskService } from '../task.service'\n\nimport { FrontRepoService, FrontRepo, NullInt64 } from '../front-repo.service'\n@Component({\n  selector: 'lib-task-sorting',\n  templateUrl: './task-sorting.component.html',\n  styleUrls: ['./task-sorting.component.css']\n})\nexport class TaskSortingComponent implements OnInit {\n\n  frontRepo: FrontRepo\n\n  // array of Task instances that are in the association\n  associatedTasks = new Array<TaskDB>();\n\n  constructor(\n    private taskService: TaskService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of task instances\n    public dialogRef: MatDialogRef<TaskSortingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.getTasks()\n  }\n\n  getTasks(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        let index = 0\n        for (let task of this.frontRepo.Tasks_array) {\n          let ID = this.dialogData.ID\n          let revPointerID = task[this.dialogData.ReversePointer]\n          let revPointerID_Index = task[this.dialogData.ReversePointer+\"_Index\"]\n          if (revPointerID.Int64 == ID) {\n            if (revPointerID_Index == undefined) {\n              revPointerID_Index = new NullInt64\n              revPointerID_Index.Valid = true\n              revPointerID_Index.Int64 = index++\n            }\n            this.associatedTasks.push(task)\n          }\n        }\n\n        // sort associated task according to order\n        this.associatedTasks.sort((t1, t2) => {\n          let t1_revPointerID_Index = t1[this.dialogData.ReversePointer+\"_Index\"]\n          let t2_revPointerID_Index = t2[this.dialogData.ReversePointer+\"_Index\"]\n          if (t1_revPointerID_Index && t2_revPointerID_Index) {\n            if (t1_revPointerID_Index.Int64 > t2_revPointerID_Index.Int64) {\n              return 1;\n            }\n            if (t1_revPointerID_Index.Int64 < t2_revPointerID_Index.Int64) {\n              return -1;\n            }  \n          }\n          return 0;\n        });\n      }\n    )\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.associatedTasks, event.previousIndex, event.currentIndex);\n\n    // set the order of Task instances\n    let index = 0\n    \n    for (let task of this.associatedTasks) {\n      let revPointerID_Index = task[this.dialogData.ReversePointer+\"_Index\"]\n      revPointerID_Index.Valid = true\n      revPointerID_Index.Int64 = index++\n    }\n  }\n\n  save() {\n\n    this.associatedTasks.forEach(\n      task => {\n        this.taskService.updateTask(task)\n          .subscribe(task => {\n            this.taskService.TaskServiceChanged.next(\"update\")\n          });\n      }\n    )\n\n    this.dialogRef.close('Sorting of '+ this.dialogData.ReversePointer+' done');\n  }\n}\n","<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n<div class=\"example-box\" *ngFor=\"let task of associatedTasks\" cdkDrag>{{task.Name}}</div>\n</div>\n<button class=\"table__save\" color=\"primary\" mat-raised-button (click)=\"save()\">\nSave\n</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// generated by ng_file_service_ts\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { TaskDB } from './task-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  // Kamar Raïmo: Adding a way to communicate between components that share information\n  // so that they are notified of a change.\n  TaskServiceChanged: BehaviorSubject<string> = new BehaviorSubject(\"\");\n\n  private tasksUrl: string\n\n  constructor(\n    private http: HttpClient,\n    private location: Location,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    // path to the service share the same origin with the path to the document\n    // get the origin in the URL to the document\n\tlet origin = this.document.location.origin\n    \n\t// if debugging with ng, replace 4200 with 8080\n\torigin = origin.replace(\"4200\", \"8080\")\n\n    // compute path to the service\n    this.tasksUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/v1/tasks';\n   }\n\n  /** GET tasks from the server */\n  getTasks(): Observable<TaskDB[]> {\n    return this.http.get<TaskDB[]>(this.tasksUrl)\n      .pipe(\n        tap(_ => this.log('fetched tasks')),\n        catchError(this.handleError<TaskDB[]>('getTasks', []))\n      );\n  }\n\n  /** GET task by id. Will 404 if id not found */\n  getTask(id: number): Observable<TaskDB> {\n    const url = `${this.tasksUrl}/${id}`;\n    return this.http.get<TaskDB>(url).pipe(\n      tap(_ => this.log(`fetched task id=${id}`)),\n      catchError(this.handleError<TaskDB>(`getTask id=${id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new task to the server */\n  postTask(taskdb: TaskDB): Observable<TaskDB> {\n\n\t\t// insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    taskdb.Ressource = {}\n    taskdb.Dependencies = []\n    let _GanttChart_Tasks_reverse = taskdb.GanttChart_Tasks_reverse\n    taskdb.GanttChart_Tasks_reverse = {}\n\n\t\treturn this.http.post<TaskDB>(this.tasksUrl, taskdb, this.httpOptions).pipe(\n\t\t\ttap(_ => {\n\t\t\t\t// insertion point for restoration of reverse pointers\n        taskdb.GanttChart_Tasks_reverse = _GanttChart_Tasks_reverse\n\t\t\t\tthis.log(`posted taskdb id=${taskdb.ID}`)\n\t\t\t}),\n\t\t\tcatchError(this.handleError<TaskDB>('postTask'))\n\t\t);\n  }\n\n  /** DELETE: delete the taskdb from the server */\n  deleteTask(taskdb: TaskDB | number): Observable<TaskDB> {\n    const id = typeof taskdb === 'number' ? taskdb : taskdb.ID;\n    const url = `${this.tasksUrl}/${id}`;\n\n    return this.http.delete<TaskDB>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted taskdb id=${id}`)),\n      catchError(this.handleError<TaskDB>('deleteTask'))\n    );\n  }\n\n  /** PUT: update the taskdb on the server */\n  updateTask(taskdb: TaskDB): Observable<TaskDB> {\n    const id = typeof taskdb === 'number' ? taskdb : taskdb.ID;\n    const url = `${this.tasksUrl}/${id}`;\n\n    // insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    taskdb.Ressource = {}\n    taskdb.Dependencies = []\n    let _GanttChart_Tasks_reverse = taskdb.GanttChart_Tasks_reverse\n    taskdb.GanttChart_Tasks_reverse = {}\n\n    return this.http.put(url, taskdb, this.httpOptions).pipe(\n      tap(_ => {\n        // insertion point for restoration of reverse pointers\n        taskdb.GanttChart_Tasks_reverse = _GanttChart_Tasks_reverse\n        this.log(`updated taskdb id=${taskdb.ID}`)\n      }),\n      catchError(this.handleError<TaskDB>('updateTask'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, combineLatest } from 'rxjs';\n\n// insertion point sub template for services imports \nimport { DependencyDB } from './dependency-db'\nimport { DependencyService } from './dependency.service'\n\nimport { GanttChartDB } from './ganttchart-db'\nimport { GanttChartService } from './ganttchart.service'\n\nimport { RessourceDB } from './ressource-db'\nimport { RessourceService } from './ressource.service'\n\nimport { TaskDB } from './task-db'\nimport { TaskService } from './task.service'\n\n\n// FrontRepo stores all instances in a front repository (design pattern repository)\nexport class FrontRepo { // insertion point sub template \n  Dependencys_array = new Array<DependencyDB>(); // array of repo instances\n  Dependencys = new Map<number, DependencyDB>(); // map of repo instances\n  Dependencys_batch = new Map<number, DependencyDB>(); // same but only in last GET (for finding repo instances to delete)\n  GanttCharts_array = new Array<GanttChartDB>(); // array of repo instances\n  GanttCharts = new Map<number, GanttChartDB>(); // map of repo instances\n  GanttCharts_batch = new Map<number, GanttChartDB>(); // same but only in last GET (for finding repo instances to delete)\n  Ressources_array = new Array<RessourceDB>(); // array of repo instances\n  Ressources = new Map<number, RessourceDB>(); // map of repo instances\n  Ressources_batch = new Map<number, RessourceDB>(); // same but only in last GET (for finding repo instances to delete)\n  Tasks_array = new Array<TaskDB>(); // array of repo instances\n  Tasks = new Map<number, TaskDB>(); // map of repo instances\n  Tasks_batch = new Map<number, TaskDB>(); // same but only in last GET (for finding repo instances to delete)\n}\n\n//\n// Store of all instances of the stack\n//\nexport const FrontRepoSingloton = new (FrontRepo)\n\n// define the type of nullable Int64 in order to support back pointers IDs\nexport class NullInt64 {\n  Int64: number\n  Valid: boolean\n}\n\n// the table component is called in different ways\n//\n// DISPLAY or ASSOCIATION MODE\n//\n// in ASSOCIATION MODE, it is invoked within a diaglo and a Dialog Data item is used to\n// configure the component\n// DialogData define the interface for information that is forwarded from the calling instance to \n// the select table\nexport class DialogData {\n  ID: number; // ID of the calling instance\n\n  // the reverse pointer is the name of the generated field on the destination\n  // struct of the ONE-MANY association\n  ReversePointer: string; // field of {{Structname}} that serve as reverse pointer\n  OrderingMode: boolean; // if true, this is for ordering items\n\n  // there are different selection mode : ONE_MANY or MANY_MANY\n  SelectionMode: SelectionMode;\n\n  // used if SelectionMode is MANY_MANY_ASSOCIATION_MODE\n  //\n  // In Gong, a MANY-MANY association is implemented as a ONE-ZERO/ONE followed by a ONE_MANY association\n  // \n  // in the MANY_MANY_ASSOCIATION_MODE case, we need also the Struct and the FieldName that are\n  // at the end of the ONE-MANY association\n  SourceStruct: string;  // The \"Aclass\"\n  SourceField: string; // the \"AnarrayofbUse\"\n  IntermediateStruct: string; // the \"AclassBclassUse\" \n  IntermediateStructField: string; // the \"Bclass\" as field\n  NextAssociationStruct: string; // the \"Bclass\"\n}\n\nexport enum SelectionMode {\n  ONE_MANY_ASSOCIATION_MODE = \"ONE_MANY_ASSOCIATION_MODE\",\n  MANY_MANY_ASSOCIATION_MODE = \"MANY_MANY_ASSOCIATION_MODE\",\n}\n\n//\n// observable that fetch all elements of the stack and store them in the FrontRepo\n//\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrontRepoService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient, // insertion point sub template \n    private dependencyService: DependencyService,\n    private ganttchartService: GanttChartService,\n    private ressourceService: RessourceService,\n    private taskService: TaskService,\n  ) { }\n\n  // postService provides a post function for each struct name\n  postService(structName: string, instanceToBePosted: any) {\n    let service = this[structName.toLowerCase() + \"Service\"]\n    service[\"post\" + structName](instanceToBePosted).subscribe(\n      instance => {\n        service[structName + \"ServiceChanged\"].next(\"post\")\n      }\n    );\n  }\n\n  // deleteService provides a delete function for each struct name\n  deleteService(structName: string, instanceToBeDeleted: any) {\n    let service = this[structName.toLowerCase() + \"Service\"]\n    service[\"delete\" + structName](instanceToBeDeleted).subscribe(\n      instance => {\n        service[structName + \"ServiceChanged\"].next(\"delete\")\n      }\n    );\n  }\n\n  // typing of observable can be messy in typescript. Therefore, one force the type\n  observableFrontRepo: [ // insertion point sub template \n    Observable<DependencyDB[]>,\n    Observable<GanttChartDB[]>,\n    Observable<RessourceDB[]>,\n    Observable<TaskDB[]>,\n  ] = [ // insertion point sub template \n      this.dependencyService.getDependencys(),\n      this.ganttchartService.getGanttCharts(),\n      this.ressourceService.getRessources(),\n      this.taskService.getTasks(),\n    ];\n\n  //\n  // pull performs a GET on all struct of the stack and redeem association pointers \n  //\n  // This is an observable. Therefore, the control flow forks with\n  // - pull() return immediatly the observable\n  // - the observable observer, if it subscribe, is called when all GET calls are performs\n  pull(): Observable<FrontRepo> {\n    return new Observable<FrontRepo>(\n      (observer) => {\n        combineLatest(\n          this.observableFrontRepo\n        ).subscribe(\n          ([ // insertion point sub template for declarations \n            dependencys_,\n            ganttcharts_,\n            ressources_,\n            tasks_,\n          ]) => {\n            // Typing can be messy with many items. Therefore, type casting is necessary here\n            // insertion point sub template for type casting \n            var dependencys: DependencyDB[]\n            dependencys = dependencys_\n            var ganttcharts: GanttChartDB[]\n            ganttcharts = ganttcharts_\n            var ressources: RessourceDB[]\n            ressources = ressources_\n            var tasks: TaskDB[]\n            tasks = tasks_\n\n            // \n            // First Step: init map of instances\n            // insertion point sub template for init \n            // init the array\n            FrontRepoSingloton.Dependencys_array = dependencys\n\n            // clear the map that counts Dependency in the GET\n            FrontRepoSingloton.Dependencys_batch.clear()\n\n            dependencys.forEach(\n              dependency => {\n                FrontRepoSingloton.Dependencys.set(dependency.ID, dependency)\n                FrontRepoSingloton.Dependencys_batch.set(dependency.ID, dependency)\n              }\n            )\n\n            // clear dependencys that are absent from the batch\n            FrontRepoSingloton.Dependencys.forEach(\n              dependency => {\n                if (FrontRepoSingloton.Dependencys_batch.get(dependency.ID) == undefined) {\n                  FrontRepoSingloton.Dependencys.delete(dependency.ID)\n                }\n              }\n            )\n\n            // sort Dependencys_array array\n            FrontRepoSingloton.Dependencys_array.sort((t1, t2) => {\n              if (t1.Name > t2.Name) {\n                return 1;\n              }\n              if (t1.Name < t2.Name) {\n                return -1;\n              }\n              return 0;\n            });\n\n            // init the array\n            FrontRepoSingloton.GanttCharts_array = ganttcharts\n\n            // clear the map that counts GanttChart in the GET\n            FrontRepoSingloton.GanttCharts_batch.clear()\n\n            ganttcharts.forEach(\n              ganttchart => {\n                FrontRepoSingloton.GanttCharts.set(ganttchart.ID, ganttchart)\n                FrontRepoSingloton.GanttCharts_batch.set(ganttchart.ID, ganttchart)\n              }\n            )\n\n            // clear ganttcharts that are absent from the batch\n            FrontRepoSingloton.GanttCharts.forEach(\n              ganttchart => {\n                if (FrontRepoSingloton.GanttCharts_batch.get(ganttchart.ID) == undefined) {\n                  FrontRepoSingloton.GanttCharts.delete(ganttchart.ID)\n                }\n              }\n            )\n\n            // sort GanttCharts_array array\n            FrontRepoSingloton.GanttCharts_array.sort((t1, t2) => {\n              if (t1.Name > t2.Name) {\n                return 1;\n              }\n              if (t1.Name < t2.Name) {\n                return -1;\n              }\n              return 0;\n            });\n\n            // init the array\n            FrontRepoSingloton.Ressources_array = ressources\n\n            // clear the map that counts Ressource in the GET\n            FrontRepoSingloton.Ressources_batch.clear()\n\n            ressources.forEach(\n              ressource => {\n                FrontRepoSingloton.Ressources.set(ressource.ID, ressource)\n                FrontRepoSingloton.Ressources_batch.set(ressource.ID, ressource)\n              }\n            )\n\n            // clear ressources that are absent from the batch\n            FrontRepoSingloton.Ressources.forEach(\n              ressource => {\n                if (FrontRepoSingloton.Ressources_batch.get(ressource.ID) == undefined) {\n                  FrontRepoSingloton.Ressources.delete(ressource.ID)\n                }\n              }\n            )\n\n            // sort Ressources_array array\n            FrontRepoSingloton.Ressources_array.sort((t1, t2) => {\n              if (t1.Name > t2.Name) {\n                return 1;\n              }\n              if (t1.Name < t2.Name) {\n                return -1;\n              }\n              return 0;\n            });\n\n            // init the array\n            FrontRepoSingloton.Tasks_array = tasks\n\n            // clear the map that counts Task in the GET\n            FrontRepoSingloton.Tasks_batch.clear()\n\n            tasks.forEach(\n              task => {\n                FrontRepoSingloton.Tasks.set(task.ID, task)\n                FrontRepoSingloton.Tasks_batch.set(task.ID, task)\n              }\n            )\n\n            // clear tasks that are absent from the batch\n            FrontRepoSingloton.Tasks.forEach(\n              task => {\n                if (FrontRepoSingloton.Tasks_batch.get(task.ID) == undefined) {\n                  FrontRepoSingloton.Tasks.delete(task.ID)\n                }\n              }\n            )\n\n            // sort Tasks_array array\n            FrontRepoSingloton.Tasks_array.sort((t1, t2) => {\n              if (t1.Name > t2.Name) {\n                return 1;\n              }\n              if (t1.Name < t2.Name) {\n                return -1;\n              }\n              return 0;\n            });\n\n\n            // \n            // Second Step: redeem pointers between instances (thanks to maps in the First Step)\n            // insertion point sub template for redeem \n            dependencys.forEach(\n              dependency => {\n                // insertion point sub sub template for ONE-/ZERO-ONE associations pointers redeeming\n                // insertion point for pointer field Task redeeming\n                {\n                  let _task = FrontRepoSingloton.Tasks.get(dependency.TaskID.Int64)\n                  if (_task) {\n                    dependency.Task = _task\n                  }\n                }\n\n                // insertion point for redeeming ONE-MANY associations\n                // insertion point for slice of pointer field Task.Dependencies redeeming\n                {\n                  let _task = FrontRepoSingloton.Tasks.get(dependency.Task_DependenciesDBID.Int64)\n                  if (_task) {\n                    if (_task.Dependencies == undefined) {\n                      _task.Dependencies = new Array<DependencyDB>()\n                    }\n                    _task.Dependencies.push(dependency)\n                    if (dependency.Task_Dependencies_reverse == undefined) {\n                      dependency.Task_Dependencies_reverse = _task\n                    }\n                  }\n                }\n              }\n            )\n            ganttcharts.forEach(\n              ganttchart => {\n                // insertion point sub sub template for ONE-/ZERO-ONE associations pointers redeeming\n\n                // insertion point for redeeming ONE-MANY associations\n              }\n            )\n            ressources.forEach(\n              ressource => {\n                // insertion point sub sub template for ONE-/ZERO-ONE associations pointers redeeming\n\n                // insertion point for redeeming ONE-MANY associations\n              }\n            )\n            tasks.forEach(\n              task => {\n                // insertion point sub sub template for ONE-/ZERO-ONE associations pointers redeeming\n                // insertion point for pointer field Ressource redeeming\n                {\n                  let _ressource = FrontRepoSingloton.Ressources.get(task.RessourceID.Int64)\n                  if (_ressource) {\n                    task.Ressource = _ressource\n                  }\n                }\n\n                // insertion point for redeeming ONE-MANY associations\n                // insertion point for slice of pointer field GanttChart.Tasks redeeming\n                {\n                  let _ganttchart = FrontRepoSingloton.GanttCharts.get(task.GanttChart_TasksDBID.Int64)\n                  if (_ganttchart) {\n                    if (_ganttchart.Tasks == undefined) {\n                      _ganttchart.Tasks = new Array<TaskDB>()\n                    }\n                    _ganttchart.Tasks.push(task)\n                    if (task.GanttChart_Tasks_reverse == undefined) {\n                      task.GanttChart_Tasks_reverse = _ganttchart\n                    }\n                  }\n                }\n              }\n            )\n\n            // hand over control flow to observer\n            observer.next(FrontRepoSingloton)\n          }\n        )\n      }\n    )\n  }\n\n  // insertion point for pull per struct \n\n  // DependencyPull performs a GET on Dependency of the stack and redeem association pointers \n  DependencyPull(): Observable<FrontRepo> {\n    return new Observable<FrontRepo>(\n      (observer) => {\n        combineLatest([\n          this.dependencyService.getDependencys()\n        ]).subscribe(\n          ([ // insertion point sub template \n            dependencys,\n          ]) => {\n            // init the array\n            FrontRepoSingloton.Dependencys_array = dependencys\n\n            // clear the map that counts Dependency in the GET\n            FrontRepoSingloton.Dependencys_batch.clear()\n\n            // \n            // First Step: init map of instances\n            // insertion point sub template \n            dependencys.forEach(\n              dependency => {\n                FrontRepoSingloton.Dependencys.set(dependency.ID, dependency)\n                FrontRepoSingloton.Dependencys_batch.set(dependency.ID, dependency)\n\n                // insertion point for redeeming ONE/ZERO-ONE associations\n                // insertion point for pointer field Task redeeming\n                {\n                  let _task = FrontRepoSingloton.Tasks.get(dependency.TaskID.Int64)\n                  if (_task) {\n                    dependency.Task = _task\n                  }\n                }\n\n                // insertion point for redeeming ONE-MANY associations\n                // insertion point for slice of pointer field Task.Dependencies redeeming\n                {\n                  let _task = FrontRepoSingloton.Tasks.get(dependency.Task_DependenciesDBID.Int64)\n                  if (_task) {\n                    if (_task.Dependencies == undefined) {\n                      _task.Dependencies = new Array<DependencyDB>()\n                    }\n                    _task.Dependencies.push(dependency)\n                    if (dependency.Task_Dependencies_reverse == undefined) {\n                      dependency.Task_Dependencies_reverse = _task\n                    }\n                  }\n                }\n              }\n            )\n\n            // clear dependencys that are absent from the GET\n            FrontRepoSingloton.Dependencys.forEach(\n              dependency => {\n                if (FrontRepoSingloton.Dependencys_batch.get(dependency.ID) == undefined) {\n                  FrontRepoSingloton.Dependencys.delete(dependency.ID)\n                }\n              }\n            )\n\n            // \n            // Second Step: redeem pointers between instances (thanks to maps in the First Step)\n            // insertion point sub template \n\n            // hand over control flow to observer\n            observer.next(FrontRepoSingloton)\n          }\n        )\n      }\n    )\n  }\n\n  // GanttChartPull performs a GET on GanttChart of the stack and redeem association pointers \n  GanttChartPull(): Observable<FrontRepo> {\n    return new Observable<FrontRepo>(\n      (observer) => {\n        combineLatest([\n          this.ganttchartService.getGanttCharts()\n        ]).subscribe(\n          ([ // insertion point sub template \n            ganttcharts,\n          ]) => {\n            // init the array\n            FrontRepoSingloton.GanttCharts_array = ganttcharts\n\n            // clear the map that counts GanttChart in the GET\n            FrontRepoSingloton.GanttCharts_batch.clear()\n\n            // \n            // First Step: init map of instances\n            // insertion point sub template \n            ganttcharts.forEach(\n              ganttchart => {\n                FrontRepoSingloton.GanttCharts.set(ganttchart.ID, ganttchart)\n                FrontRepoSingloton.GanttCharts_batch.set(ganttchart.ID, ganttchart)\n\n                // insertion point for redeeming ONE/ZERO-ONE associations\n\n                // insertion point for redeeming ONE-MANY associations\n              }\n            )\n\n            // clear ganttcharts that are absent from the GET\n            FrontRepoSingloton.GanttCharts.forEach(\n              ganttchart => {\n                if (FrontRepoSingloton.GanttCharts_batch.get(ganttchart.ID) == undefined) {\n                  FrontRepoSingloton.GanttCharts.delete(ganttchart.ID)\n                }\n              }\n            )\n\n            // \n            // Second Step: redeem pointers between instances (thanks to maps in the First Step)\n            // insertion point sub template \n\n            // hand over control flow to observer\n            observer.next(FrontRepoSingloton)\n          }\n        )\n      }\n    )\n  }\n\n  // RessourcePull performs a GET on Ressource of the stack and redeem association pointers \n  RessourcePull(): Observable<FrontRepo> {\n    return new Observable<FrontRepo>(\n      (observer) => {\n        combineLatest([\n          this.ressourceService.getRessources()\n        ]).subscribe(\n          ([ // insertion point sub template \n            ressources,\n          ]) => {\n            // init the array\n            FrontRepoSingloton.Ressources_array = ressources\n\n            // clear the map that counts Ressource in the GET\n            FrontRepoSingloton.Ressources_batch.clear()\n\n            // \n            // First Step: init map of instances\n            // insertion point sub template \n            ressources.forEach(\n              ressource => {\n                FrontRepoSingloton.Ressources.set(ressource.ID, ressource)\n                FrontRepoSingloton.Ressources_batch.set(ressource.ID, ressource)\n\n                // insertion point for redeeming ONE/ZERO-ONE associations\n\n                // insertion point for redeeming ONE-MANY associations\n              }\n            )\n\n            // clear ressources that are absent from the GET\n            FrontRepoSingloton.Ressources.forEach(\n              ressource => {\n                if (FrontRepoSingloton.Ressources_batch.get(ressource.ID) == undefined) {\n                  FrontRepoSingloton.Ressources.delete(ressource.ID)\n                }\n              }\n            )\n\n            // \n            // Second Step: redeem pointers between instances (thanks to maps in the First Step)\n            // insertion point sub template \n\n            // hand over control flow to observer\n            observer.next(FrontRepoSingloton)\n          }\n        )\n      }\n    )\n  }\n\n  // TaskPull performs a GET on Task of the stack and redeem association pointers \n  TaskPull(): Observable<FrontRepo> {\n    return new Observable<FrontRepo>(\n      (observer) => {\n        combineLatest([\n          this.taskService.getTasks()\n        ]).subscribe(\n          ([ // insertion point sub template \n            tasks,\n          ]) => {\n            // init the array\n            FrontRepoSingloton.Tasks_array = tasks\n\n            // clear the map that counts Task in the GET\n            FrontRepoSingloton.Tasks_batch.clear()\n\n            // \n            // First Step: init map of instances\n            // insertion point sub template \n            tasks.forEach(\n              task => {\n                FrontRepoSingloton.Tasks.set(task.ID, task)\n                FrontRepoSingloton.Tasks_batch.set(task.ID, task)\n\n                // insertion point for redeeming ONE/ZERO-ONE associations\n                // insertion point for pointer field Ressource redeeming\n                {\n                  let _ressource = FrontRepoSingloton.Ressources.get(task.RessourceID.Int64)\n                  if (_ressource) {\n                    task.Ressource = _ressource\n                  }\n                }\n\n                // insertion point for redeeming ONE-MANY associations\n                // insertion point for slice of pointer field GanttChart.Tasks redeeming\n                {\n                  let _ganttchart = FrontRepoSingloton.GanttCharts.get(task.GanttChart_TasksDBID.Int64)\n                  if (_ganttchart) {\n                    if (_ganttchart.Tasks == undefined) {\n                      _ganttchart.Tasks = new Array<TaskDB>()\n                    }\n                    _ganttchart.Tasks.push(task)\n                    if (task.GanttChart_Tasks_reverse == undefined) {\n                      task.GanttChart_Tasks_reverse = _ganttchart\n                    }\n                  }\n                }\n              }\n            )\n\n            // clear tasks that are absent from the GET\n            FrontRepoSingloton.Tasks.forEach(\n              task => {\n                if (FrontRepoSingloton.Tasks_batch.get(task.ID) == undefined) {\n                  FrontRepoSingloton.Tasks.delete(task.ID)\n                }\n              }\n            )\n\n            // \n            // Second Step: redeem pointers between instances (thanks to maps in the First Step)\n            // insertion point sub template \n\n            // hand over control flow to observer\n            observer.next(FrontRepoSingloton)\n          }\n        )\n      }\n    )\n  }\n}\n\n// insertion point for get unique ID per struct \nexport function getDependencyUniqueID(id: number): number {\n  return 31 * id\n}\nexport function getGanttChartUniqueID(id: number): number {\n  return 37 * id\n}\nexport function getRessourceUniqueID(id: number): number {\n  return 41 * id\n}\nexport function getTaskUniqueID(id: number): number {\n  return 43 * id\n}\n","// insertion point for imports\nimport { TaskDB } from './task-db'\n\n// usefull for managing pointer ID values that can be nullable\nimport { NullInt64 } from './front-repo.service'\n\nexport class DependencyDB {\n\tCreatedAt?: string;\n\tDeletedAt?: string;\n\tID?: number;\n\n\t// insertion point for basic fields declarations\n\tName?: string\n\n\t// insertion point for other declarations\n\tTask?: TaskDB\n\tTaskID?: NullInt64\n\n\tTask_DependenciesDBID?: NullInt64\n\tTask_DependenciesDBID_Index?: NullInt64 // store the index of the dependency instance in Task.Dependencies\n\tTask_Dependencies_reverse?: TaskDB\n\n}\n","// generated from NgDetailTemplateTS\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { RessourceDB } from '../ressource-db'\nimport { RessourceService } from '../ressource.service'\n\nimport { FrontRepoService, FrontRepo, SelectionMode, DialogData } from '../front-repo.service'\nimport { MapOfComponents } from '../map-components'\nimport { MapOfSortingComponents } from '../map-components'\n\n// insertion point for imports\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\n\nimport { NullInt64 } from '../front-repo.service'\n\n// RessourceDetailComponent is initilizaed from different routes\n// RessourceDetailComponentState detail different cases \nenum RessourceDetailComponentState {\n\tCREATE_INSTANCE,\n\tUPDATE_INSTANCE,\n\t// insertion point for declarations of enum values of state\n}\n\n@Component({\n\tselector: 'app-ressource-detail',\n\ttemplateUrl: './ressource-detail.component.html',\n\tstyleUrls: ['./ressource-detail.component.css'],\n})\nexport class RessourceDetailComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\t// the RessourceDB of interest\n\tressource: RessourceDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n\n\t// this stores the information related to string fields\n\t// if false, the field is inputed with an <input ...> form \n\t// if true, it is inputed with a <textarea ...> </textarea>\n\tmapFields_displayAsTextArea = new Map<string, boolean>()\n\n\t// the state at initialization (CREATION, UPDATE or CREATE with one association set)\n\tstate: RessourceDetailComponentState\n\n\t// in UDPATE state, if is the id of the instance to update\n\t// in CREATE state with one association set, this is the id of the associated instance\n\tid: number\n\n\t// in CREATE state with one association set, this is the id of the associated instance\n\toriginStruct: string\n\toriginStructFieldName: string\n\n\tconstructor(\n\t\tprivate ressourceService: RessourceService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tpublic dialog: MatDialog,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t}\n\n\tngOnInit(): void {\n\n\t\t// compute state\n\t\tthis.id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.originStruct = this.route.snapshot.paramMap.get('originStruct');\n\t\tthis.originStructFieldName = this.route.snapshot.paramMap.get('originStructFieldName');\n\n\t\tconst association = this.route.snapshot.paramMap.get('association');\n\t\tif (this.id == 0) {\n\t\t\tthis.state = RessourceDetailComponentState.CREATE_INSTANCE\n\t\t} else {\n\t\t\tif (this.originStruct == undefined) {\n\t\t\t\tthis.state = RessourceDetailComponentState.UPDATE_INSTANCE\n\t\t\t} else {\n\t\t\t\tswitch (this.originStructFieldName) {\n\t\t\t\t\t// insertion point for state computation\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.originStructFieldName + \" is unkown association\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.getRessource()\n\n\t\t// observable for changes in structs\n\t\tthis.ressourceService.RessourceServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"post\" || message == \"update\" || message == \"delete\") {\n\t\t\t\t\tthis.getRessource()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\t// insertion point for initialisation of enums list\n\t}\n\n\tgetRessource(): void {\n\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase RessourceDetailComponentState.CREATE_INSTANCE:\n\t\t\t\t\t\tthis.ressource = new (RessourceDB)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RessourceDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\t\t\tthis.ressource = frontRepo.Ressources.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// insertion point for init of association field\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.state + \" is unkown state\")\n\t\t\t\t}\n\n\t\t\t\t// insertion point for recovery of form controls value for bool fields\n\t\t\t}\n\t\t)\n\n\n\t}\n\n\tsave(): void {\n\n\t\t// some fields needs to be translated into serializable forms\n\t\t// pointers fields, after the translation, are nulled in order to perform serialization\n\n\t\t// insertion point for translation/nullation of each field\n\n\t\t// save from the front pointer space to the non pointer space for serialization\n\n\t\t// insertion point for translation/nullation of each pointers\n\n\t\tswitch (this.state) {\n\t\t\tcase RessourceDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\tthis.ressourceService.updateRessource(this.ressource)\n\t\t\t\t\t.subscribe(ressource => {\n\t\t\t\t\t\tthis.ressourceService.RessourceServiceChanged.next(\"update\")\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.ressourceService.postRessource(this.ressource).subscribe(ressource => {\n\t\t\t\t\tthis.ressourceService.RessourceServiceChanged.next(\"post\")\n\t\t\t\t\tthis.ressource = {} // reset fields\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// openReverseSelection is a generic function that calls dialog for the edition of \n\t// ONE-MANY association\n\t// It uses the MapOfComponent provided by the front repo\n\topenReverseSelection(AssociatedStruct: string, reverseField: string, selectionMode: string,\n\t\tsourceField: string, intermediateStructField: string, nextAssociatedStruct: string ) {\n\n\t\tconsole.log(\"mode \" + selectionMode)\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\tlet dialogData = new DialogData();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"50%\"\n\t\tdialogConfig.height = \"50%\"\n\t\tif (selectionMode == SelectionMode.ONE_MANY_ASSOCIATION_MODE) {\n\n\t\t\tdialogData.ID = this.ressource.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(AssociatedStruct).get(\n\t\t\t\t\tAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\t\tif (selectionMode == SelectionMode.MANY_MANY_ASSOCIATION_MODE) {\n\t\t\tdialogData.ID = this.ressource.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\t// set up the source\n\t\t\tdialogData.SourceStruct = \"Ressource\"\n\t\t\tdialogData.SourceField = sourceField\n\n\t\t\t// set up the intermediate struct\n\t\t\tdialogData.IntermediateStruct = AssociatedStruct\n\t\t\tdialogData.IntermediateStructField = intermediateStructField\n\n\t\t\t// set up the end struct\n\t\t\tdialogData.NextAssociationStruct = nextAssociatedStruct\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(nextAssociatedStruct).get(\n\t\t\t\t\tnextAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\n\t}\n\n\topenDragAndDropOrdering(AssociatedStruct: string, reverseField: string) {\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.data = {\n\t\t\tID: this.ressource.ID,\n\t\t\tReversePointer: reverseField,\n\t\t\tOrderingMode: true,\n\t\t};\n\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\tMapOfSortingComponents.get(AssociatedStruct).get(\n\t\t\t\tAssociatedStruct + 'SortingComponent'\n\t\t\t),\n\t\t\tdialogConfig\n\t\t);\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t});\n\t}\n\n\tfillUpNameIfEmpty(event) {\n\t\tif (this.ressource.Name == undefined) {\n\t\t\tthis.ressource.Name = event.value.Name\n\t\t}\n\t}\n\n\ttoggleTextArea(fieldName: string) {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\tlet displayAsTextArea = this.mapFields_displayAsTextArea.get(fieldName)\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, !displayAsTextArea)\n\t\t} else {\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, true)\n\t\t}\n\t}\n\n\tisATextArea(fieldName: string): boolean {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\treturn this.mapFields_displayAsTextArea.get(fieldName)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tcompareObjects(o1: any, o2: any) {\n\t\tif (o1?.ID == o2?.ID) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n}\n","<form *ngIf=\"ressource\" class=\"details\">\n    <h2 class=\"details__title\">ressource</h2>\n    <!-- insertion point for fields specific code -->\n    <mat-grid-list *ngIf='!isATextArea(\"Name\")' cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <mat-form-field mat-form-field class=\"detail-full-width\">\n                <mat-label>Name</mat-label>\n                <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"ressource.Name\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"toggleTextArea('Name')\">\n                <mat-icon>\n                    expand_more\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-form-field *ngIf='isATextArea(\"Name\")' mat-form-field class=\"detail-full-width\">\n        <mat-label>Name</mat-label>\n        <textarea name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"ressource.Name\"></textarea>\n    </mat-form-field>\n\n    <div class=\"details__save\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">\n            Save ressource\n        </button>\n    </div>\n</form>","import { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\n// for angular material\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatListModule } from '@angular/material/list'\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { AngularSplitModule, SplitComponent } from 'angular-split';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { SplitterComponent } from './splitter/splitter.component'\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n// insertion point for imports \nimport { DependencysTableComponent } from './dependencys-table/dependencys-table.component'\nimport { DependencySortingComponent } from './dependency-sorting/dependency-sorting.component'\nimport { DependencyDetailComponent } from './dependency-detail/dependency-detail.component'\nimport { DependencyPresentationComponent } from './dependency-presentation/dependency-presentation.component'\n\nimport { GanttChartsTableComponent } from './ganttcharts-table/ganttcharts-table.component'\nimport { GanttChartSortingComponent } from './ganttchart-sorting/ganttchart-sorting.component'\nimport { GanttChartDetailComponent } from './ganttchart-detail/ganttchart-detail.component'\nimport { GanttChartPresentationComponent } from './ganttchart-presentation/ganttchart-presentation.component'\n\nimport { RessourcesTableComponent } from './ressources-table/ressources-table.component'\nimport { RessourceSortingComponent } from './ressource-sorting/ressource-sorting.component'\nimport { RessourceDetailComponent } from './ressource-detail/ressource-detail.component'\nimport { RessourcePresentationComponent } from './ressource-presentation/ressource-presentation.component'\n\nimport { TasksTableComponent } from './tasks-table/tasks-table.component'\nimport { TaskSortingComponent } from './task-sorting/task-sorting.component'\nimport { TaskDetailComponent } from './task-detail/task-detail.component'\nimport { TaskPresentationComponent } from './task-presentation/task-presentation.component'\n\n\n@NgModule({\n\tdeclarations: [\n\t\t// insertion point for declarations \n\t\tDependencysTableComponent,\n\t\tDependencySortingComponent,\n\t\tDependencyDetailComponent,\n\t\tDependencyPresentationComponent,\n\n\t\tGanttChartsTableComponent,\n\t\tGanttChartSortingComponent,\n\t\tGanttChartDetailComponent,\n\t\tGanttChartPresentationComponent,\n\n\t\tRessourcesTableComponent,\n\t\tRessourceSortingComponent,\n\t\tRessourceDetailComponent,\n\t\tRessourcePresentationComponent,\n\n\t\tTasksTableComponent,\n\t\tTaskSortingComponent,\n\t\tTaskDetailComponent,\n\t\tTaskPresentationComponent,\n\n\n\t\tSplitterComponent,\n\t\tSidebarComponent\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tCommonModule,\n\t\tRouterModule,\n\n\t\tAppRoutingModule,\n\n\t\tMatSliderModule,\n\t\tMatSelectModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tMatDatepickerModule,\n\t\tMatTableModule,\n\t\tMatSortModule,\n\t\tMatPaginatorModule,\n\t\tMatCheckboxModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatToolbarModule,\n\t\tMatExpansionModule,\n\t\tMatListModule,\n\t\tMatDialogModule,\n\t\tMatGridListModule,\n\t\tMatTreeModule,\n\t\tDragDropModule,\n\n\t\tAngularSplitModule,\n\t],\n\texports: [\n\t\t// insertion point for declarations \n\t\tDependencysTableComponent,\n\t\tDependencySortingComponent,\n\t\tDependencyDetailComponent,\n\t\tDependencyPresentationComponent,\n\n\t\tGanttChartsTableComponent,\n\t\tGanttChartSortingComponent,\n\t\tGanttChartDetailComponent,\n\t\tGanttChartPresentationComponent,\n\n\t\tRessourcesTableComponent,\n\t\tRessourceSortingComponent,\n\t\tRessourceDetailComponent,\n\t\tRessourcePresentationComponent,\n\n\t\tTasksTableComponent,\n\t\tTaskSortingComponent,\n\t\tTaskDetailComponent,\n\t\tTaskPresentationComponent,\n\n\n\t\tSplitterComponent,\n\t\tSidebarComponent,\n\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: MatDialogRef,\n\t\t\tuseValue: {}\n\t\t},\n\t],\n})\nexport class GonggooglechartsModule { }\n","// generated from NgDetailTemplateTS\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { GanttChartDB } from '../ganttchart-db'\nimport { GanttChartService } from '../ganttchart.service'\n\nimport { FrontRepoService, FrontRepo, SelectionMode, DialogData } from '../front-repo.service'\nimport { MapOfComponents } from '../map-components'\nimport { MapOfSortingComponents } from '../map-components'\n\n// insertion point for imports\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\n\nimport { NullInt64 } from '../front-repo.service'\n\n// GanttChartDetailComponent is initilizaed from different routes\n// GanttChartDetailComponentState detail different cases \nenum GanttChartDetailComponentState {\n\tCREATE_INSTANCE,\n\tUPDATE_INSTANCE,\n\t// insertion point for declarations of enum values of state\n}\n\n@Component({\n\tselector: 'app-ganttchart-detail',\n\ttemplateUrl: './ganttchart-detail.component.html',\n\tstyleUrls: ['./ganttchart-detail.component.css'],\n})\nexport class GanttChartDetailComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\t// the GanttChartDB of interest\n\tganttchart: GanttChartDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n\n\t// this stores the information related to string fields\n\t// if false, the field is inputed with an <input ...> form \n\t// if true, it is inputed with a <textarea ...> </textarea>\n\tmapFields_displayAsTextArea = new Map<string, boolean>()\n\n\t// the state at initialization (CREATION, UPDATE or CREATE with one association set)\n\tstate: GanttChartDetailComponentState\n\n\t// in UDPATE state, if is the id of the instance to update\n\t// in CREATE state with one association set, this is the id of the associated instance\n\tid: number\n\n\t// in CREATE state with one association set, this is the id of the associated instance\n\toriginStruct: string\n\toriginStructFieldName: string\n\n\tconstructor(\n\t\tprivate ganttchartService: GanttChartService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tpublic dialog: MatDialog,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t}\n\n\tngOnInit(): void {\n\n\t\t// compute state\n\t\tthis.id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.originStruct = this.route.snapshot.paramMap.get('originStruct');\n\t\tthis.originStructFieldName = this.route.snapshot.paramMap.get('originStructFieldName');\n\n\t\tconst association = this.route.snapshot.paramMap.get('association');\n\t\tif (this.id == 0) {\n\t\t\tthis.state = GanttChartDetailComponentState.CREATE_INSTANCE\n\t\t} else {\n\t\t\tif (this.originStruct == undefined) {\n\t\t\t\tthis.state = GanttChartDetailComponentState.UPDATE_INSTANCE\n\t\t\t} else {\n\t\t\t\tswitch (this.originStructFieldName) {\n\t\t\t\t\t// insertion point for state computation\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.originStructFieldName + \" is unkown association\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.getGanttChart()\n\n\t\t// observable for changes in structs\n\t\tthis.ganttchartService.GanttChartServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"post\" || message == \"update\" || message == \"delete\") {\n\t\t\t\t\tthis.getGanttChart()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\t// insertion point for initialisation of enums list\n\t}\n\n\tgetGanttChart(): void {\n\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase GanttChartDetailComponentState.CREATE_INSTANCE:\n\t\t\t\t\t\tthis.ganttchart = new (GanttChartDB)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GanttChartDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\t\t\tthis.ganttchart = frontRepo.GanttCharts.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// insertion point for init of association field\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.state + \" is unkown state\")\n\t\t\t\t}\n\n\t\t\t\t// insertion point for recovery of form controls value for bool fields\n\t\t\t}\n\t\t)\n\n\n\t}\n\n\tsave(): void {\n\n\t\t// some fields needs to be translated into serializable forms\n\t\t// pointers fields, after the translation, are nulled in order to perform serialization\n\n\t\t// insertion point for translation/nullation of each field\n\n\t\t// save from the front pointer space to the non pointer space for serialization\n\n\t\t// insertion point for translation/nullation of each pointers\n\n\t\tswitch (this.state) {\n\t\t\tcase GanttChartDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\tthis.ganttchartService.updateGanttChart(this.ganttchart)\n\t\t\t\t\t.subscribe(ganttchart => {\n\t\t\t\t\t\tthis.ganttchartService.GanttChartServiceChanged.next(\"update\")\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.ganttchartService.postGanttChart(this.ganttchart).subscribe(ganttchart => {\n\t\t\t\t\tthis.ganttchartService.GanttChartServiceChanged.next(\"post\")\n\t\t\t\t\tthis.ganttchart = {} // reset fields\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// openReverseSelection is a generic function that calls dialog for the edition of \n\t// ONE-MANY association\n\t// It uses the MapOfComponent provided by the front repo\n\topenReverseSelection(AssociatedStruct: string, reverseField: string, selectionMode: string,\n\t\tsourceField: string, intermediateStructField: string, nextAssociatedStruct: string ) {\n\n\t\tconsole.log(\"mode \" + selectionMode)\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\tlet dialogData = new DialogData();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"50%\"\n\t\tdialogConfig.height = \"50%\"\n\t\tif (selectionMode == SelectionMode.ONE_MANY_ASSOCIATION_MODE) {\n\n\t\t\tdialogData.ID = this.ganttchart.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(AssociatedStruct).get(\n\t\t\t\t\tAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\t\tif (selectionMode == SelectionMode.MANY_MANY_ASSOCIATION_MODE) {\n\t\t\tdialogData.ID = this.ganttchart.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\t// set up the source\n\t\t\tdialogData.SourceStruct = \"GanttChart\"\n\t\t\tdialogData.SourceField = sourceField\n\n\t\t\t// set up the intermediate struct\n\t\t\tdialogData.IntermediateStruct = AssociatedStruct\n\t\t\tdialogData.IntermediateStructField = intermediateStructField\n\n\t\t\t// set up the end struct\n\t\t\tdialogData.NextAssociationStruct = nextAssociatedStruct\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(nextAssociatedStruct).get(\n\t\t\t\t\tnextAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\n\t}\n\n\topenDragAndDropOrdering(AssociatedStruct: string, reverseField: string) {\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.data = {\n\t\t\tID: this.ganttchart.ID,\n\t\t\tReversePointer: reverseField,\n\t\t\tOrderingMode: true,\n\t\t};\n\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\tMapOfSortingComponents.get(AssociatedStruct).get(\n\t\t\t\tAssociatedStruct + 'SortingComponent'\n\t\t\t),\n\t\t\tdialogConfig\n\t\t);\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t});\n\t}\n\n\tfillUpNameIfEmpty(event) {\n\t\tif (this.ganttchart.Name == undefined) {\n\t\t\tthis.ganttchart.Name = event.value.Name\n\t\t}\n\t}\n\n\ttoggleTextArea(fieldName: string) {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\tlet displayAsTextArea = this.mapFields_displayAsTextArea.get(fieldName)\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, !displayAsTextArea)\n\t\t} else {\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, true)\n\t\t}\n\t}\n\n\tisATextArea(fieldName: string): boolean {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\treturn this.mapFields_displayAsTextArea.get(fieldName)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tcompareObjects(o1: any, o2: any) {\n\t\tif (o1?.ID == o2?.ID) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n}\n","<form *ngIf=\"ganttchart\" class=\"details\">\n    <h2 class=\"details__title\">ganttchart</h2>\n    <!-- insertion point for fields specific code -->\n    <mat-grid-list *ngIf='!isATextArea(\"Name\")' cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <mat-form-field mat-form-field class=\"detail-full-width\">\n                <mat-label>Name</mat-label>\n                <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"ganttchart.Name\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"toggleTextArea('Name')\">\n                <mat-icon>\n                    expand_more\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-form-field *ngIf='isATextArea(\"Name\")' mat-form-field class=\"detail-full-width\">\n        <mat-label>Name</mat-label>\n        <textarea name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"ganttchart.Name\"></textarea>\n    </mat-form-field>\n\n    <mat-grid-list cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <button mat-raised-button (click)=\"openReverseSelection('Task', 'GanttChart_TasksDBID', 'ONE_MANY_ASSOCIATION_MODE', '', '', '')\">Tasks</button>\n        </mat-grid-tile>\n        <!-- insertion point for the button of the MANY_MANY association-->\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"openDragAndDropOrdering('Task', 'GanttChart_TasksDBID')\">\n                <mat-icon>\n                    shuffle\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <div class=\"details__save\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">\n            Save ganttchart\n        </button>\n    </div>\n</form>","\n<div class=\"presentation__header\" (click)=\"setEditorRouterOutlet(ressource.ID)\">\n    <h1>Ressource's fields <span class=\"material-icons\">edit</span></h1>\n</div>\n<table *ngIf=\"ressource\" class=\"presentation__table mat-table\">\n    <tr class=\"mat-header-row\">\n        <th class=\"mat-header-cell\">Name</th>\n        <th class=\"mat-header-cell\">Value</th>\n    </tr>\n    <!-- insertion point for fields specific code -->\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Name</td>\n        <td class=\"mat-cell\">{{ressource.Name}}</td>\n    </tr>\n</table>\n<!-- hack to force loading of mat table style an error is generated but it is a know angular issue https://github.com/angular/components/issues/10941 -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Position Column -->\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { RessourceDB } from '../ressource-db'\nimport { RessourceService } from '../ressource.service'\n\nimport { FrontRepoService, FrontRepo } from '../front-repo.service'\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nexport interface ressourceDummyElement {\n}\n\nconst ELEMENT_DATA: ressourceDummyElement[] = [\n];\n\n@Component({\n\tselector: 'app-ressource-presentation',\n\ttemplateUrl: './ressource-presentation.component.html',\n\tstyleUrls: ['./ressource-presentation.component.css'],\n})\nexport class RessourcePresentationComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\tdisplayedColumns: string[] = [];\n\tdataSource = ELEMENT_DATA;\n\n\tressource: RessourceDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n \n\tconstructor(\n\t\tprivate ressourceService: RessourceService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function () {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tngOnInit(): void {\n\t\tthis.getRessource();\n\n\t\t// observable for changes in \n\t\tthis.ressourceService.RessourceServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"update\") {\n\t\t\t\t\tthis.getRessource()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tgetRessource(): void {\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tthis.ressource = this.frontRepo.Ressources.get(id)\n\n\t\t\t\t// insertion point for recovery of durations\n\t\t\t}\n\t\t);\n\t}\n\n\t// set presentation outlet\n\tsetPresentationRouterOutlet(structName: string, ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + structName + \"-presentation\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n\n\t// set editor outlet\n\tsetEditorRouterOutlet(ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ressource-detail\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gonggooglecharts-splitter',\n  templateUrl: './splitter.component.html',\n  styleUrls: ['./splitter.component.css'],\n})\nexport class SplitterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div style=\"width: 100%; height: 100%; background: grey(16);\">\n    <as-split direction=\"horizontal\">\n        <as-split-area size=\"20\">\n            <as-split direction=\"vertical\">\n                <as-split-area>\n                    <app-gonggooglecharts-sidebar></app-gonggooglecharts-sidebar>\n                </as-split-area>\n            </as-split>\n        </as-split-area>\n        <as-split-area size=\"80\">\n            <as-split direction=\"vertical\">\n                <as-split-area>\n                    <router-outlet name=\"github_com_fullstack_lang_gonggooglecharts_go_table\"></router-outlet>\n                </as-split-area>\n                <as-split-area size=\"20\">\n                    <as-split direction=\"horizontal\">\n                        <as-split-area>\n                            <router-outlet name=\"github_com_fullstack_lang_gonggooglecharts_go_presentation\"></router-outlet>\n                        </as-split-area>\n                        <as-split-area>\n                            <router-outlet name=\"github_com_fullstack_lang_gonggooglecharts_go_editor\"></router-outlet>\n                        </as-split-area>\n                    </as-split>\n                </as-split-area>\n            </as-split>\n        </as-split-area>\n    </as-split>\n</div>","// generated by ng_file_service_ts\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { RessourceDB } from './ressource-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RessourceService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  // Kamar Raïmo: Adding a way to communicate between components that share information\n  // so that they are notified of a change.\n  RessourceServiceChanged: BehaviorSubject<string> = new BehaviorSubject(\"\");\n\n  private ressourcesUrl: string\n\n  constructor(\n    private http: HttpClient,\n    private location: Location,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    // path to the service share the same origin with the path to the document\n    // get the origin in the URL to the document\n\tlet origin = this.document.location.origin\n    \n\t// if debugging with ng, replace 4200 with 8080\n\torigin = origin.replace(\"4200\", \"8080\")\n\n    // compute path to the service\n    this.ressourcesUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/v1/ressources';\n   }\n\n  /** GET ressources from the server */\n  getRessources(): Observable<RessourceDB[]> {\n    return this.http.get<RessourceDB[]>(this.ressourcesUrl)\n      .pipe(\n        tap(_ => this.log('fetched ressources')),\n        catchError(this.handleError<RessourceDB[]>('getRessources', []))\n      );\n  }\n\n  /** GET ressource by id. Will 404 if id not found */\n  getRessource(id: number): Observable<RessourceDB> {\n    const url = `${this.ressourcesUrl}/${id}`;\n    return this.http.get<RessourceDB>(url).pipe(\n      tap(_ => this.log(`fetched ressource id=${id}`)),\n      catchError(this.handleError<RessourceDB>(`getRessource id=${id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new ressource to the server */\n  postRessource(ressourcedb: RessourceDB): Observable<RessourceDB> {\n\n\t\t// insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n\n\t\treturn this.http.post<RessourceDB>(this.ressourcesUrl, ressourcedb, this.httpOptions).pipe(\n\t\t\ttap(_ => {\n\t\t\t\t// insertion point for restoration of reverse pointers\n\t\t\t\tthis.log(`posted ressourcedb id=${ressourcedb.ID}`)\n\t\t\t}),\n\t\t\tcatchError(this.handleError<RessourceDB>('postRessource'))\n\t\t);\n  }\n\n  /** DELETE: delete the ressourcedb from the server */\n  deleteRessource(ressourcedb: RessourceDB | number): Observable<RessourceDB> {\n    const id = typeof ressourcedb === 'number' ? ressourcedb : ressourcedb.ID;\n    const url = `${this.ressourcesUrl}/${id}`;\n\n    return this.http.delete<RessourceDB>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted ressourcedb id=${id}`)),\n      catchError(this.handleError<RessourceDB>('deleteRessource'))\n    );\n  }\n\n  /** PUT: update the ressourcedb on the server */\n  updateRessource(ressourcedb: RessourceDB): Observable<RessourceDB> {\n    const id = typeof ressourcedb === 'number' ? ressourcedb : ressourcedb.ID;\n    const url = `${this.ressourcesUrl}/${id}`;\n\n    // insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n\n    return this.http.put(url, ressourcedb, this.httpOptions).pipe(\n      tap(_ => {\n        // insertion point for restoration of reverse pointers\n        this.log(`updated ressourcedb id=${ressourcedb.ID}`)\n      }),\n      catchError(this.handleError<RessourceDB>('updateRessource'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n\n  }\n}\n","\n<div class=\"presentation__header\" (click)=\"setEditorRouterOutlet(ganttchart.ID)\">\n    <h1>GanttChart's fields <span class=\"material-icons\">edit</span></h1>\n</div>\n<table *ngIf=\"ganttchart\" class=\"presentation__table mat-table\">\n    <tr class=\"mat-header-row\">\n        <th class=\"mat-header-cell\">Name</th>\n        <th class=\"mat-header-cell\">Value</th>\n    </tr>\n    <!-- insertion point for fields specific code -->\n    <tr class=\"mat-row\">\n        <td class=\"mat-cell\">Name</td>\n        <td class=\"mat-cell\">{{ganttchart.Name}}</td>\n    </tr>\n</table>\n<!-- hack to force loading of mat table style an error is generated but it is a know angular issue https://github.com/angular/components/issues/10941 -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Position Column -->\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { GanttChartDB } from '../ganttchart-db'\nimport { GanttChartService } from '../ganttchart.service'\n\nimport { FrontRepoService, FrontRepo } from '../front-repo.service'\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nexport interface ganttchartDummyElement {\n}\n\nconst ELEMENT_DATA: ganttchartDummyElement[] = [\n];\n\n@Component({\n\tselector: 'app-ganttchart-presentation',\n\ttemplateUrl: './ganttchart-presentation.component.html',\n\tstyleUrls: ['./ganttchart-presentation.component.css'],\n})\nexport class GanttChartPresentationComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\tdisplayedColumns: string[] = [];\n\tdataSource = ELEMENT_DATA;\n\n\tganttchart: GanttChartDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n \n\tconstructor(\n\t\tprivate ganttchartService: GanttChartService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function () {\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tngOnInit(): void {\n\t\tthis.getGanttChart();\n\n\t\t// observable for changes in \n\t\tthis.ganttchartService.GanttChartServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"update\") {\n\t\t\t\t\tthis.getGanttChart()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tgetGanttChart(): void {\n\t\tconst id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tthis.ganttchart = this.frontRepo.GanttCharts.get(id)\n\n\t\t\t\t// insertion point for recovery of durations\n\t\t\t}\n\t\t);\n\t}\n\n\t// set presentation outlet\n\tsetPresentationRouterOutlet(structName: string, ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + structName + \"-presentation\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n\n\t// set editor outlet\n\tsetEditorRouterOutlet(ID: number) {\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tgithub_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ganttchart-detail\", ID]\n\t\t\t}\n\t\t}]);\n\t}\n}\n","import { Component } from '@angular/core';\n\nimport { GonggooglechartspecificComponent } from 'gonggooglechartspecific'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng';\n}\n","<as-split direction=\"horyzontal\">\n    <as-split-area size=\"50\">\n        <app-gonggooglecharts-splitter></app-gonggooglecharts-splitter>\n    </as-split-area>\n    <as-split-area size=\"50\">\n        <lib-ganttchart></lib-ganttchart>\n    </as-split-area>\n</as-split>","// generated by ng_file_service_ts\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { GanttChartDB } from './ganttchart-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GanttChartService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  // Kamar Raïmo: Adding a way to communicate between components that share information\n  // so that they are notified of a change.\n  GanttChartServiceChanged: BehaviorSubject<string> = new BehaviorSubject(\"\");\n\n  private ganttchartsUrl: string\n\n  constructor(\n    private http: HttpClient,\n    private location: Location,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    // path to the service share the same origin with the path to the document\n    // get the origin in the URL to the document\n\tlet origin = this.document.location.origin\n    \n\t// if debugging with ng, replace 4200 with 8080\n\torigin = origin.replace(\"4200\", \"8080\")\n\n    // compute path to the service\n    this.ganttchartsUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/v1/ganttcharts';\n   }\n\n  /** GET ganttcharts from the server */\n  getGanttCharts(): Observable<GanttChartDB[]> {\n    return this.http.get<GanttChartDB[]>(this.ganttchartsUrl)\n      .pipe(\n        tap(_ => this.log('fetched ganttcharts')),\n        catchError(this.handleError<GanttChartDB[]>('getGanttCharts', []))\n      );\n  }\n\n  /** GET ganttchart by id. Will 404 if id not found */\n  getGanttChart(id: number): Observable<GanttChartDB> {\n    const url = `${this.ganttchartsUrl}/${id}`;\n    return this.http.get<GanttChartDB>(url).pipe(\n      tap(_ => this.log(`fetched ganttchart id=${id}`)),\n      catchError(this.handleError<GanttChartDB>(`getGanttChart id=${id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new ganttchart to the server */\n  postGanttChart(ganttchartdb: GanttChartDB): Observable<GanttChartDB> {\n\n\t\t// insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    ganttchartdb.Tasks = []\n\n\t\treturn this.http.post<GanttChartDB>(this.ganttchartsUrl, ganttchartdb, this.httpOptions).pipe(\n\t\t\ttap(_ => {\n\t\t\t\t// insertion point for restoration of reverse pointers\n\t\t\t\tthis.log(`posted ganttchartdb id=${ganttchartdb.ID}`)\n\t\t\t}),\n\t\t\tcatchError(this.handleError<GanttChartDB>('postGanttChart'))\n\t\t);\n  }\n\n  /** DELETE: delete the ganttchartdb from the server */\n  deleteGanttChart(ganttchartdb: GanttChartDB | number): Observable<GanttChartDB> {\n    const id = typeof ganttchartdb === 'number' ? ganttchartdb : ganttchartdb.ID;\n    const url = `${this.ganttchartsUrl}/${id}`;\n\n    return this.http.delete<GanttChartDB>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted ganttchartdb id=${id}`)),\n      catchError(this.handleError<GanttChartDB>('deleteGanttChart'))\n    );\n  }\n\n  /** PUT: update the ganttchartdb on the server */\n  updateGanttChart(ganttchartdb: GanttChartDB): Observable<GanttChartDB> {\n    const id = typeof ganttchartdb === 'number' ? ganttchartdb : ganttchartdb.ID;\n    const url = `${this.ganttchartsUrl}/${id}`;\n\n    // insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    ganttchartdb.Tasks = []\n\n    return this.http.put(url, ganttchartdb, this.httpOptions).pipe(\n      tap(_ => {\n        // insertion point for restoration of reverse pointers\n        this.log(`updated ganttchartdb id=${ganttchartdb.ID}`)\n      }),\n      catchError(this.handleError<GanttChartDB>('updateGanttChart'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n\n  }\n}\n","// insertion point sub template for components imports \n  import { DependencysTableComponent } from './dependencys-table/dependencys-table.component'\n  import { DependencySortingComponent } from './dependency-sorting/dependency-sorting.component'\n  import { GanttChartsTableComponent } from './ganttcharts-table/ganttcharts-table.component'\n  import { GanttChartSortingComponent } from './ganttchart-sorting/ganttchart-sorting.component'\n  import { RessourcesTableComponent } from './ressources-table/ressources-table.component'\n  import { RessourceSortingComponent } from './ressource-sorting/ressource-sorting.component'\n  import { TasksTableComponent } from './tasks-table/tasks-table.component'\n  import { TaskSortingComponent } from './task-sorting/task-sorting.component'\n\n// insertion point sub template for map of components per struct \n  export const MapOfDependencysComponents: Map<string, any> = new Map([[\"DependencysTableComponent\", DependencysTableComponent],])\n  export const MapOfDependencySortingComponents: Map<string, any> = new Map([[\"DependencySortingComponent\", DependencySortingComponent],])\n  export const MapOfGanttChartsComponents: Map<string, any> = new Map([[\"GanttChartsTableComponent\", GanttChartsTableComponent],])\n  export const MapOfGanttChartSortingComponents: Map<string, any> = new Map([[\"GanttChartSortingComponent\", GanttChartSortingComponent],])\n  export const MapOfRessourcesComponents: Map<string, any> = new Map([[\"RessourcesTableComponent\", RessourcesTableComponent],])\n  export const MapOfRessourceSortingComponents: Map<string, any> = new Map([[\"RessourceSortingComponent\", RessourceSortingComponent],])\n  export const MapOfTasksComponents: Map<string, any> = new Map([[\"TasksTableComponent\", TasksTableComponent],])\n  export const MapOfTaskSortingComponents: Map<string, any> = new Map([[\"TaskSortingComponent\", TaskSortingComponent],])\n\n// map of all ng components of the stacks\nexport const MapOfComponents: Map<string, any> =\n  new Map(\n    [\n      // insertion point sub template for map of components \n      [\"Dependency\", MapOfDependencysComponents],\n      [\"GanttChart\", MapOfGanttChartsComponents],\n      [\"Ressource\", MapOfRessourcesComponents],\n      [\"Task\", MapOfTasksComponents],\n    ]\n  )\n\n// map of all ng components of the stacks\nexport const MapOfSortingComponents: Map<string, any> =\n  new Map(\n    [\n    // insertion point sub template for map of sorting components \n      [\"Dependency\", MapOfDependencySortingComponents],\n      [\"GanttChart\", MapOfGanttChartSortingComponents],\n      [\"Ressource\", MapOfRessourceSortingComponents],\n      [\"Task\", MapOfTaskSortingComponents],\n    ]\n  )\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { GonggooglechartsModule } from 'gonggooglecharts'\n\nimport { GonggooglechartspecificModule } from 'gonggooglechartspecific'\n\nimport { AngularSplitModule } from 'angular-split';\n\n// mandatory\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AngularSplitModule,\n\n    HttpClientModule,\n    GonggooglechartsModule,\n    GonggooglechartspecificModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterState } from '@angular/router';\n\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\n\nimport { FrontRepoService, FrontRepo } from '../front-repo.service'\nimport { CommitNbService } from '../commitnb.service'\n\n// insertion point for per struct import code\nimport { DependencyService } from '../dependency.service'\nimport { getDependencyUniqueID } from '../front-repo.service'\nimport { GanttChartService } from '../ganttchart.service'\nimport { getGanttChartUniqueID } from '../front-repo.service'\nimport { RessourceService } from '../ressource.service'\nimport { getRessourceUniqueID } from '../front-repo.service'\nimport { TaskService } from '../task.service'\nimport { getTaskUniqueID } from '../front-repo.service'\n\n/**\n * Types of a GongNode / GongFlatNode\n */\nexport enum GongNodeType {\n  STRUCT = \"STRUCT\",\n  INSTANCE = \"INSTANCE\",\n  ONE__ZERO_ONE_ASSOCIATION = 'ONE__ZERO_ONE_ASSOCIATION',\n  ONE__ZERO_MANY_ASSOCIATION = 'ONE__ZERO_MANY_ASSOCIATION',\n}\n\n/**\n * GongNode is the \"data\" node\n */\ninterface GongNode {\n  name: string; // if STRUCT, the name of the struct, if INSTANCE the name of the instance\n  children?: GongNode[];\n  type: GongNodeType;\n  structName: string;\n  associationField: string;\n  associatedStructName: string;\n  id: number;\n  uniqueIdPerStack: number;\n}\n\n\n/** \n * GongFlatNode is the dynamic visual node with expandable and level information\n * */\ninterface GongFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  type: GongNodeType;\n  structName: string;\n  associationField: string;\n  associatedStructName: string;\n  id: number;\n  uniqueIdPerStack: number;\n}\n\n\n@Component({\n  selector: 'app-gonggooglecharts-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n  * _transformer generated a displayed node from a data node\n  *\n  * @param node input data noe\n  * @param level input level\n  *\n  * @returns an ExampleFlatNode\n  */\n  private _transformer = (node: GongNode, level: number) => {\n    return {\n\n      /**\n      * in javascript, The !! ensures the resulting type is a boolean (true or false).\n      *\n      * !!node.children will evaluate to true is the variable is defined\n      */\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n      type: node.type,\n      structName: node.structName,\n      associationField: node.associationField,\n      associatedStructName: node.associatedStructName,\n      id: node.id,\n      uniqueIdPerStack: node.uniqueIdPerStack,\n    }\n  }\n\n  /**\n   * treeControl is passed as the paramter treeControl in the \"mat-tree\" selector\n   *\n   * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n   *\n   * Construct with flat tree data node functions getLevel and isExpandable.\n  constructor(\n    getLevel: (dataNode: T) => number,\n    isExpandable: (dataNode: T) => boolean, \n    options?: FlatTreeControlOptions<T, K> | undefined);\n   */\n  treeControl = new FlatTreeControl<GongFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  /**\n   * from mat-tree documentation\n   *\n   * Tree flattener to convert a normal type of node to node with children & level information.\n   */\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  /**\n   * data is the other paramter to the \"mat-tree\" selector\n   * \n   * strangely, the dataSource declaration has to follow the treeFlattener declaration\n   */\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  /**\n   * hasChild is used by the selector for expandable nodes\n   * \n   *  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n   * \n   * @param _ \n   * @param node \n   */\n  hasChild = (_: number, node: GongFlatNode) => node.expandable;\n\n  // front repo\n  frontRepo: FrontRepo\n  commitNb: number\n\n  // \"data\" tree that is constructed during NgInit and is passed to the mat-tree component\n  gongNodeTree = new Array<GongNode>();\n\n  constructor(\n    private router: Router,\n    private frontRepoService: FrontRepoService,\n    private commitNbService: CommitNbService,\n\n    // insertion point for per struct service declaration\n    private dependencyService: DependencyService,\n    private ganttchartService: GanttChartService,\n    private ressourceService: RessourceService,\n    private taskService: TaskService,\n  ) { }\n\n  ngOnInit(): void {\n    this.refresh()\n\n    // insertion point for per struct observable for refresh trigger\n    // observable for changes in structs\n    this.dependencyService.DependencyServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.refresh()\n        }\n      }\n    )\n    // observable for changes in structs\n    this.ganttchartService.GanttChartServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.refresh()\n        }\n      }\n    )\n    // observable for changes in structs\n    this.ressourceService.RessourceServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.refresh()\n        }\n      }\n    )\n    // observable for changes in structs\n    this.taskService.TaskServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.refresh()\n        }\n      }\n    )\n  }\n\n  refresh(): void {\n    this.frontRepoService.pull().subscribe(frontRepo => {\n      this.frontRepo = frontRepo\n\n      // use of a Gödel number to uniquely identfy nodes : 2 * node.id + 3 * node.level\n      let memoryOfExpandedNodes = new Map<number, boolean>()\n      let nonInstanceNodeId = 1\n\n      if (this.treeControl.dataNodes != undefined) {\n        this.treeControl.dataNodes.forEach(\n          node => {\n            if (this.treeControl.isExpanded(node)) {\n              memoryOfExpandedNodes[node.uniqueIdPerStack] = true\n            } else {\n              memoryOfExpandedNodes[node.uniqueIdPerStack] = false\n            }\n          }\n        )\n      }\n\n      this.gongNodeTree = new Array<GongNode>();\n\n      // insertion point for per struct tree construction\n      /**\n      * fill up the Dependency part of the mat tree\n      */\n      let dependencyGongNodeStruct: GongNode = {\n        name: \"Dependency\",\n        type: GongNodeType.STRUCT,\n        id: 0,\n        uniqueIdPerStack: 13 * nonInstanceNodeId,\n        structName: \"Dependency\",\n        associationField: \"\",\n        associatedStructName: \"\",\n        children: new Array<GongNode>()\n      }\n      nonInstanceNodeId = nonInstanceNodeId + 1\n      this.gongNodeTree.push(dependencyGongNodeStruct)\n\n      this.frontRepo.Dependencys_array.sort((t1, t2) => {\n        if (t1.Name > t2.Name) {\n          return 1;\n        }\n        if (t1.Name < t2.Name) {\n          return -1;\n        }\n        return 0;\n      });\n\n      this.frontRepo.Dependencys_array.forEach(\n        dependencyDB => {\n          let dependencyGongNodeInstance: GongNode = {\n            name: dependencyDB.Name,\n            type: GongNodeType.INSTANCE,\n            id: dependencyDB.ID,\n            uniqueIdPerStack: getDependencyUniqueID(dependencyDB.ID),\n            structName: \"Dependency\",\n            associationField: \"\",\n            associatedStructName: \"\",\n            children: new Array<GongNode>()\n          }\n          dependencyGongNodeStruct.children.push(dependencyGongNodeInstance)\n\n          // insertion point for per field code\n          /**\n          * let append a node for the association Task\n          */\n          let TaskGongNodeAssociation: GongNode = {\n            name: \"(Task) Task\",\n            type: GongNodeType.ONE__ZERO_ONE_ASSOCIATION,\n            id: dependencyDB.ID,\n            uniqueIdPerStack: 17 * nonInstanceNodeId,\n            structName: \"Dependency\",\n            associationField: \"Task\",\n            associatedStructName: \"Task\",\n            children: new Array<GongNode>()\n          }\n          nonInstanceNodeId = nonInstanceNodeId + 1\n          dependencyGongNodeInstance.children.push(TaskGongNodeAssociation)\n\n          /**\n            * let append a node for the instance behind the asssociation Task\n            */\n          if (dependencyDB.Task != undefined) {\n            let dependencyGongNodeInstance_Task: GongNode = {\n              name: dependencyDB.Task.Name,\n              type: GongNodeType.INSTANCE,\n              id: dependencyDB.Task.ID,\n              uniqueIdPerStack: // godel numbering (thank you kurt)\n                3 * getDependencyUniqueID(dependencyDB.ID)\n                + 5 * getTaskUniqueID(dependencyDB.Task.ID),\n              structName: \"Task\",\n              associationField: \"\",\n              associatedStructName: \"\",\n              children: new Array<GongNode>()\n            }\n            TaskGongNodeAssociation.children.push(dependencyGongNodeInstance_Task)\n          }\n\n        }\n      )\n\n      /**\n      * fill up the GanttChart part of the mat tree\n      */\n      let ganttchartGongNodeStruct: GongNode = {\n        name: \"GanttChart\",\n        type: GongNodeType.STRUCT,\n        id: 0,\n        uniqueIdPerStack: 13 * nonInstanceNodeId,\n        structName: \"GanttChart\",\n        associationField: \"\",\n        associatedStructName: \"\",\n        children: new Array<GongNode>()\n      }\n      nonInstanceNodeId = nonInstanceNodeId + 1\n      this.gongNodeTree.push(ganttchartGongNodeStruct)\n\n      this.frontRepo.GanttCharts_array.sort((t1, t2) => {\n        if (t1.Name > t2.Name) {\n          return 1;\n        }\n        if (t1.Name < t2.Name) {\n          return -1;\n        }\n        return 0;\n      });\n\n      this.frontRepo.GanttCharts_array.forEach(\n        ganttchartDB => {\n          let ganttchartGongNodeInstance: GongNode = {\n            name: ganttchartDB.Name,\n            type: GongNodeType.INSTANCE,\n            id: ganttchartDB.ID,\n            uniqueIdPerStack: getGanttChartUniqueID(ganttchartDB.ID),\n            structName: \"GanttChart\",\n            associationField: \"\",\n            associatedStructName: \"\",\n            children: new Array<GongNode>()\n          }\n          ganttchartGongNodeStruct.children.push(ganttchartGongNodeInstance)\n\n          // insertion point for per field code\n          /**\n          * let append a node for the slide of pointer Tasks\n          */\n          let TasksGongNodeAssociation: GongNode = {\n            name: \"(Task) Tasks\",\n            type: GongNodeType.ONE__ZERO_MANY_ASSOCIATION,\n            id: ganttchartDB.ID,\n            uniqueIdPerStack: 19 * nonInstanceNodeId,\n            structName: \"GanttChart\",\n            associationField: \"Tasks\",\n            associatedStructName: \"Task\",\n            children: new Array<GongNode>()\n          }\n          nonInstanceNodeId = nonInstanceNodeId + 1\n          ganttchartGongNodeInstance.children.push(TasksGongNodeAssociation)\n\n          ganttchartDB.Tasks?.forEach(taskDB => {\n            let taskNode: GongNode = {\n              name: taskDB.Name,\n              type: GongNodeType.INSTANCE,\n              id: taskDB.ID,\n              uniqueIdPerStack: // godel numbering (thank you kurt)\n                7 * getGanttChartUniqueID(ganttchartDB.ID)\n                + 11 * getTaskUniqueID(taskDB.ID),\n              structName: \"Task\",\n              associationField: \"\",\n              associatedStructName: \"\",\n              children: new Array<GongNode>()\n            }\n            TasksGongNodeAssociation.children.push(taskNode)\n          })\n\n        }\n      )\n\n      /**\n      * fill up the Ressource part of the mat tree\n      */\n      let ressourceGongNodeStruct: GongNode = {\n        name: \"Ressource\",\n        type: GongNodeType.STRUCT,\n        id: 0,\n        uniqueIdPerStack: 13 * nonInstanceNodeId,\n        structName: \"Ressource\",\n        associationField: \"\",\n        associatedStructName: \"\",\n        children: new Array<GongNode>()\n      }\n      nonInstanceNodeId = nonInstanceNodeId + 1\n      this.gongNodeTree.push(ressourceGongNodeStruct)\n\n      this.frontRepo.Ressources_array.sort((t1, t2) => {\n        if (t1.Name > t2.Name) {\n          return 1;\n        }\n        if (t1.Name < t2.Name) {\n          return -1;\n        }\n        return 0;\n      });\n\n      this.frontRepo.Ressources_array.forEach(\n        ressourceDB => {\n          let ressourceGongNodeInstance: GongNode = {\n            name: ressourceDB.Name,\n            type: GongNodeType.INSTANCE,\n            id: ressourceDB.ID,\n            uniqueIdPerStack: getRessourceUniqueID(ressourceDB.ID),\n            structName: \"Ressource\",\n            associationField: \"\",\n            associatedStructName: \"\",\n            children: new Array<GongNode>()\n          }\n          ressourceGongNodeStruct.children.push(ressourceGongNodeInstance)\n\n          // insertion point for per field code\n        }\n      )\n\n      /**\n      * fill up the Task part of the mat tree\n      */\n      let taskGongNodeStruct: GongNode = {\n        name: \"Task\",\n        type: GongNodeType.STRUCT,\n        id: 0,\n        uniqueIdPerStack: 13 * nonInstanceNodeId,\n        structName: \"Task\",\n        associationField: \"\",\n        associatedStructName: \"\",\n        children: new Array<GongNode>()\n      }\n      nonInstanceNodeId = nonInstanceNodeId + 1\n      this.gongNodeTree.push(taskGongNodeStruct)\n\n      this.frontRepo.Tasks_array.sort((t1, t2) => {\n        if (t1.Name > t2.Name) {\n          return 1;\n        }\n        if (t1.Name < t2.Name) {\n          return -1;\n        }\n        return 0;\n      });\n\n      this.frontRepo.Tasks_array.forEach(\n        taskDB => {\n          let taskGongNodeInstance: GongNode = {\n            name: taskDB.Name,\n            type: GongNodeType.INSTANCE,\n            id: taskDB.ID,\n            uniqueIdPerStack: getTaskUniqueID(taskDB.ID),\n            structName: \"Task\",\n            associationField: \"\",\n            associatedStructName: \"\",\n            children: new Array<GongNode>()\n          }\n          taskGongNodeStruct.children.push(taskGongNodeInstance)\n\n          // insertion point for per field code\n          /**\n          * let append a node for the association Ressource\n          */\n          let RessourceGongNodeAssociation: GongNode = {\n            name: \"(Ressource) Ressource\",\n            type: GongNodeType.ONE__ZERO_ONE_ASSOCIATION,\n            id: taskDB.ID,\n            uniqueIdPerStack: 17 * nonInstanceNodeId,\n            structName: \"Task\",\n            associationField: \"Ressource\",\n            associatedStructName: \"Ressource\",\n            children: new Array<GongNode>()\n          }\n          nonInstanceNodeId = nonInstanceNodeId + 1\n          taskGongNodeInstance.children.push(RessourceGongNodeAssociation)\n\n          /**\n            * let append a node for the instance behind the asssociation Ressource\n            */\n          if (taskDB.Ressource != undefined) {\n            let taskGongNodeInstance_Ressource: GongNode = {\n              name: taskDB.Ressource.Name,\n              type: GongNodeType.INSTANCE,\n              id: taskDB.Ressource.ID,\n              uniqueIdPerStack: // godel numbering (thank you kurt)\n                3 * getTaskUniqueID(taskDB.ID)\n                + 5 * getRessourceUniqueID(taskDB.Ressource.ID),\n              structName: \"Ressource\",\n              associationField: \"\",\n              associatedStructName: \"\",\n              children: new Array<GongNode>()\n            }\n            RessourceGongNodeAssociation.children.push(taskGongNodeInstance_Ressource)\n          }\n\n          /**\n          * let append a node for the slide of pointer Dependencies\n          */\n          let DependenciesGongNodeAssociation: GongNode = {\n            name: \"(Dependency) Dependencies\",\n            type: GongNodeType.ONE__ZERO_MANY_ASSOCIATION,\n            id: taskDB.ID,\n            uniqueIdPerStack: 19 * nonInstanceNodeId,\n            structName: \"Task\",\n            associationField: \"Dependencies\",\n            associatedStructName: \"Dependency\",\n            children: new Array<GongNode>()\n          }\n          nonInstanceNodeId = nonInstanceNodeId + 1\n          taskGongNodeInstance.children.push(DependenciesGongNodeAssociation)\n\n          taskDB.Dependencies?.forEach(dependencyDB => {\n            let dependencyNode: GongNode = {\n              name: dependencyDB.Name,\n              type: GongNodeType.INSTANCE,\n              id: dependencyDB.ID,\n              uniqueIdPerStack: // godel numbering (thank you kurt)\n                7 * getTaskUniqueID(taskDB.ID)\n                + 11 * getDependencyUniqueID(dependencyDB.ID),\n              structName: \"Dependency\",\n              associationField: \"\",\n              associatedStructName: \"\",\n              children: new Array<GongNode>()\n            }\n            DependenciesGongNodeAssociation.children.push(dependencyNode)\n          })\n\n        }\n      )\n\n\n      this.dataSource.data = this.gongNodeTree\n\n      // expand nodes that were exapanded before\n      if (this.treeControl.dataNodes != undefined) {\n        this.treeControl.dataNodes.forEach(\n          node => {\n            if (memoryOfExpandedNodes[node.uniqueIdPerStack] != undefined) {\n              if (memoryOfExpandedNodes[node.uniqueIdPerStack]) {\n                this.treeControl.expand(node)\n              }\n            }\n          }\n        )\n      }\n    });\n\n    // fetch the number of commits\n    this.commitNbService.getCommitNb().subscribe(\n      commitNb => {\n        this.commitNb = commitNb\n      }\n    )\n  }\n\n  /**\n   * \n   * @param path for the outlet selection\n   */\n  setTableRouterOutlet(path: string) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_table: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + path]\n      }\n    }]);\n  }\n\n  /**\n   * \n   * @param path for the outlet selection\n   */\n  setTableRouterOutletFromTree(path: string, type: GongNodeType, structName: string, id: number) {\n\n    if (type == GongNodeType.STRUCT) {\n      this.router.navigate([{\n        outlets: {\n          github_com_fullstack_lang_gonggooglecharts_go_table: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + path.toLowerCase()]\n        }\n      }]);\n    }\n\n    if (type == GongNodeType.INSTANCE) {\n      this.router.navigate([{\n        outlets: {\n          github_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + structName.toLowerCase() + \"-presentation\", id]\n        }\n      }]);\n    }\n  }\n\n  setEditorRouterOutlet(path) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + path.toLowerCase()]\n      }\n    }]);\n  }\n\n  setEditorSpecialRouterOutlet( node: GongFlatNode) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + node.associatedStructName.toLowerCase() + \"-adder\", node.id, node.structName, node.associationField]\n      }\n    }]);\n  }\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node class=\"node-link\" *matTreeNodeDef=\"let node\" matTreeNodePadding>\n        <!-- use a disabled button to provide padding for tree leaf -->\n        <button mat-icon-button disabled></button>\n        <span (click)=\"setTableRouterOutletFromTree( node.name + 's', node.type, node.structName, node.id)\">{{node.name}} &nbsp;</span>\n        <mat-icon class=\"node-link-icon\" *ngIf='node.level==0' (click)=\"setEditorRouterOutlet( node.name + '-adder' )\">\n            add_circle_outline\n        </mat-icon>\n        <mat-icon class=\"node-link-icon\" *ngIf='node.level==2 && node.type==\"ONE__ZERO_MANY_ASSOCIATION\"' (click)=\"setEditorSpecialRouterOutlet( node )\" >\n            add_circle_outline\n        </mat-icon>\n    </mat-tree-node>\n\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node class=\"node-link\" *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n                {{treeControl.isExpanded(node) ?\n                'expand_more' :\n                'chevron_right'\n                }}\n            </mat-icon>\n        </button>\n        <span (click)=\"setTableRouterOutletFromTree( node.name + 's', node.type, node.structName, node.id)\">{{node.name}}  &nbsp;</span>\n        <mat-icon class=\"node-link-icon\" *ngIf='node.level==0' (click)=\"setEditorRouterOutlet( node.name + '-adder' )\">\n            add_circle_outline\n        </mat-icon>\n        <mat-icon class=\"node-link-icon\" *ngIf='node.level==2 && node.type==\"ONE__ZERO_MANY_ASSOCIATION\"' (click)=\"setEditorSpecialRouterOutlet( node )\" >\n            add_circle_outline\n        </mat-icon>\n    </mat-tree-node>\n</mat-tree>\n<h3>&nbsp;&nbsp;Nb commits:&nbsp; &nbsp;&nbsp;{{commitNb}}</h3>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subscription, timer } from 'rxjs';\nimport * as gonggooglechart from 'gonggooglecharts'\n\nimport {\n  ChartErrorEvent,\n  ChartMouseLeaveEvent,\n  ChartMouseOverEvent,\n  ChartSelectionChangedEvent,\n  ChartType,\n  Column,\n  GoogleChartComponent\n} from 'angular-google-charts';\nimport { take } from 'rxjs/operators';\n\nfunction daysToMilliseconds(days: number): number {\n  return days * 24 * 60 * 60 * 1000;\n}\n\nclass GoogleGanttChart {\n  title: string;\n  type: ChartType;\n  data: any[][];\n  columns?: Column[];\n  options?: {};\n}\n\nclass GoogleGanttTask {\n  Task_ID: string;\n  Task_Name: string;\n  Resource: string;\n  Start: Date;\n  End: Date;\n  Duration: number;\n  PercentComplete: number;\n  Dependencies: string;\n}\n\n@Component({\n  selector: 'lib-ganttchart',\n  templateUrl: './ganttchart.component.html',\n  styleUrls: ['./ganttchart.component.css']\n})\nexport class GanttchartComponent implements OnInit {\n\n  height: number\n\n  /**\n * the component is refreshed when modification are performed in the back repo \n * \n * the checkCommitNbTimer polls the commit number of the back repo\n * if the commit number has increased, it pulls the front repo and redraw the diagram\n */\n  checkGongdocCommitNbTimer: Observable<number> = timer(500, 500);\n  lastCommitNb = -1\n  currTime: number\n\n  public gonggooglechartFrontRepo: gonggooglechart.FrontRepo\n\n  public charts: {\n    title: string;\n    type: ChartType;\n    data: any[][];\n    columns?: Column[];\n    options?: {};\n  }[] = [];\n\n  @ViewChild('chart', { static: true })\n  public chart!: GoogleChartComponent;\n\n  constructor(\n    private gonggooglechartFrontRepoService: gonggooglechart.FrontRepoService,\n    private gonggooglechartCommitNbService: gonggooglechart.CommitNbService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.checkGongdocCommitNbTimer.subscribe(\n      currTime => {\n        this.currTime = currTime\n\n        // see above for the explanation\n        this.gonggooglechartCommitNbService.getCommitNb().subscribe(\n          commitNb => {\n            if (this.lastCommitNb < commitNb) {\n\n              console.log(\"last commit nb \" + this.lastCommitNb + \" new: \" + commitNb)\n              this.refresh()\n              this.lastCommitNb = commitNb\n            }\n          }\n        )\n      }\n    )\n\n  }\n  refresh(): void {\n\n    this.charts = []\n\n    this.gonggooglechartFrontRepoService.pull().subscribe(\n      gonggooglechartsFrontRepo => {\n        this.gonggooglechartFrontRepo = gonggooglechartsFrontRepo\n\n        this.height = 40\n\n        this.gonggooglechartFrontRepo.GanttCharts_array.forEach(\n          ganttChart => {\n            let ganttTargetChart = new GoogleGanttChart()\n            ganttTargetChart.title = ganttChart.Name\n            ganttTargetChart.type = ChartType.Gantt\n            ganttTargetChart.columns = [\n              'Task ID',\n              'Task Name',\n              'Resource',\n              'Start Date',\n              'End Date',\n              'Duration',\n              'Percent Complete',\n              'Dependencies'\n            ]\n            ganttTargetChart.data = [\n              //   ['Research', 'Identify a gant js framework', null,\n              //     new Date(2015, 0, 1), new Date(2015, 0, 30), daysToMilliseconds(3), 1, null],\n            ]\n\n\n            let taskList = new Array<gonggooglechart.TaskDB>()\n            taskList = ganttChart.Tasks\n\n            var sortedTaskList: gonggooglechart.TaskDB[] = taskList.sort((t1, t2) => {\n              if (t1.Rank > t2.Rank) {\n                return 1;\n              }\n    \n              if (t1.Rank < t2.Rank) {\n                return -1;\n              }\n    \n              return 0;\n            });\n\n            this.height = this.height + sortedTaskList.length * 20\n            console.log(\"height \" + this.height)\n\n            sortedTaskList.forEach(\n              task => {\n\n                // console.log(task.Name + \" start at \" + task.Start + \" with ressource \" + task.Ressource?.Name)\n\n                let start = new Date(task.Start)\n                // console.log(\"start \" + start.getFullYear() + \" \" + start.getMonth() + \" \" + start.getDay())\n\n                let end = new Date(task.End)\n                // console.log(\"end \" + end.getFullYear() + \" \" + end.getMonth() + \" \" + end.getDay())\n\n                // see https://developers.google.com/chart/interactive/docs/gallery/ganttchart#data-format\n\n                let googleGanttTask = new (GoogleGanttTask)\n\n                googleGanttTask.Task_ID = task.Name\n                googleGanttTask.Task_Name = task.DisplayedName\n                googleGanttTask.Resource = task.Ressource?.Name\n                googleGanttTask.Start = new Date(start.getFullYear(), start.getMonth(), start.getDay())\n                googleGanttTask.End = new Date(end.getFullYear(), end.getMonth(), end.getDay())\n                googleGanttTask.Duration = daysToMilliseconds(0)\n                googleGanttTask.PercentComplete = task.PercentComplete\n                // googleGanttTask.Dependencies = task.Dependencies?.Name\n                let dependencies = \"\"\n                let index = 0\n                if (task.Dependencies) {\n                  for (let dependency of task.Dependencies) {\n\n                    // dependencies are separated by ','\n                    if (index++ > 0 && dependency.Task) {\n                      dependencies += ','\n                    }\n                    dependencies += dependency.Task?.Name\n                  }\n                }\n                googleGanttTask.Dependencies = dependencies\n\n                ganttTargetChart.data.push(\n                  [googleGanttTask.Task_ID,\n                  googleGanttTask.Task_Name,\n                  googleGanttTask.Resource,\n                  googleGanttTask.Start,\n                  googleGanttTask.End,\n                  googleGanttTask.Duration,\n                  googleGanttTask.PercentComplete,\n                  googleGanttTask.Dependencies]\n                )\n\n                // specify that task have not to be ordered\n                ganttTargetChart.options = {\n                  gantt: {\n                    sortTasks: false,\n\n                  },\n                }\n              }\n            )\n\n            this.charts.push(ganttTargetChart)\n          }\n        )\n      }\n    )\n\n  }\n\n}\n","<div *ngFor=\"let chart of charts\">\n    <google-chart width=\"1200\" height=\"18000\" [title]=\"chart.title\" [type]=\"chart.type\" [data]=\"chart.data\" [columns]=\"chart.columns\"\n        [options]=\"chart.options\" (ready)=\"onReady()\" (select)=\"onSelect($event)\" (error)=\"onError($event)\"\n        (mouseenter)=\"onMouseEnter($event)\" (mouseleave)=\"onMouseLeave($event)\">\n    </google-chart>\n</div>\n<div>\n    <p class=\"commit\">Gantt chart {{lastCommitNb}}</p>\n</div>\n","// generated by ng_file_service_ts\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { DependencyDB } from './dependency-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DependencyService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  // Kamar Raïmo: Adding a way to communicate between components that share information\n  // so that they are notified of a change.\n  DependencyServiceChanged: BehaviorSubject<string> = new BehaviorSubject(\"\");\n\n  private dependencysUrl: string\n\n  constructor(\n    private http: HttpClient,\n    private location: Location,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    // path to the service share the same origin with the path to the document\n    // get the origin in the URL to the document\n\tlet origin = this.document.location.origin\n    \n\t// if debugging with ng, replace 4200 with 8080\n\torigin = origin.replace(\"4200\", \"8080\")\n\n    // compute path to the service\n    this.dependencysUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/v1/dependencys';\n   }\n\n  /** GET dependencys from the server */\n  getDependencys(): Observable<DependencyDB[]> {\n    return this.http.get<DependencyDB[]>(this.dependencysUrl)\n      .pipe(\n        tap(_ => this.log('fetched dependencys')),\n        catchError(this.handleError<DependencyDB[]>('getDependencys', []))\n      );\n  }\n\n  /** GET dependency by id. Will 404 if id not found */\n  getDependency(id: number): Observable<DependencyDB> {\n    const url = `${this.dependencysUrl}/${id}`;\n    return this.http.get<DependencyDB>(url).pipe(\n      tap(_ => this.log(`fetched dependency id=${id}`)),\n      catchError(this.handleError<DependencyDB>(`getDependency id=${id}`))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new dependency to the server */\n  postDependency(dependencydb: DependencyDB): Observable<DependencyDB> {\n\n\t\t// insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    dependencydb.Task = {}\n    let _Task_Dependencies_reverse = dependencydb.Task_Dependencies_reverse\n    dependencydb.Task_Dependencies_reverse = {}\n\n\t\treturn this.http.post<DependencyDB>(this.dependencysUrl, dependencydb, this.httpOptions).pipe(\n\t\t\ttap(_ => {\n\t\t\t\t// insertion point for restoration of reverse pointers\n        dependencydb.Task_Dependencies_reverse = _Task_Dependencies_reverse\n\t\t\t\tthis.log(`posted dependencydb id=${dependencydb.ID}`)\n\t\t\t}),\n\t\t\tcatchError(this.handleError<DependencyDB>('postDependency'))\n\t\t);\n  }\n\n  /** DELETE: delete the dependencydb from the server */\n  deleteDependency(dependencydb: DependencyDB | number): Observable<DependencyDB> {\n    const id = typeof dependencydb === 'number' ? dependencydb : dependencydb.ID;\n    const url = `${this.dependencysUrl}/${id}`;\n\n    return this.http.delete<DependencyDB>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted dependencydb id=${id}`)),\n      catchError(this.handleError<DependencyDB>('deleteDependency'))\n    );\n  }\n\n  /** PUT: update the dependencydb on the server */\n  updateDependency(dependencydb: DependencyDB): Observable<DependencyDB> {\n    const id = typeof dependencydb === 'number' ? dependencydb : dependencydb.ID;\n    const url = `${this.dependencysUrl}/${id}`;\n\n    // insertion point for reset of pointers and reverse pointers (to avoid circular JSON)\n    dependencydb.Task = {}\n    let _Task_Dependencies_reverse = dependencydb.Task_Dependencies_reverse\n    dependencydb.Task_Dependencies_reverse = {}\n\n    return this.http.put(url, dependencydb, this.httpOptions).pipe(\n      tap(_ => {\n        // insertion point for restoration of reverse pointers\n        dependencydb.Task_Dependencies_reverse = _Task_Dependencies_reverse\n        this.log(`updated dependencydb id=${dependencydb.ID}`)\n      }),\n      catchError(this.handleError<DependencyDB>('updateDependency'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n\n  }\n}\n","// generated by gong\nimport { Component, OnInit, AfterViewInit, ViewChild, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatButton } from '@angular/material/button'\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData, FrontRepoService, FrontRepo, NullInt64, SelectionMode } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nconst allowMultiSelect = true;\n\nimport { Router, RouterState } from '@angular/router';\nimport { RessourceDB } from '../ressource-db'\nimport { RessourceService } from '../ressource.service'\n\n// TableComponent is initilizaed from different routes\n// TableComponentMode detail different cases \nenum TableComponentMode {\n  DISPLAY_MODE,\n  ONE_MANY_ASSOCIATION_MODE,\n  MANY_MANY_ASSOCIATION_MODE,\n}\n\n// generated table component\n@Component({\n  selector: 'app-ressourcestable',\n  templateUrl: './ressources-table.component.html',\n  styleUrls: ['./ressources-table.component.css'],\n})\nexport class RessourcesTableComponent implements OnInit {\n\n  // mode at invocation\n  mode: TableComponentMode\n\n  // used if the component is called as a selection component of Ressource instances\n  selection: SelectionModel<RessourceDB>;\n  initialSelection = new Array<RessourceDB>();\n\n  // the data source for the table\n  ressources: RessourceDB[];\n  matTableDataSource: MatTableDataSource<RessourceDB>\n\n  // front repo, that will be referenced by this.ressources\n  frontRepo: FrontRepo\n\n  // displayedColumns is referenced by the MatTable component for specify what columns\n  // have to be displayed and in what order\n  displayedColumns: string[];\n\n  // for sorting & pagination\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n\n    // enable sorting on all fields (including pointers and reverse pointer)\n    this.matTableDataSource.sortingDataAccessor = (ressourceDB: RessourceDB, property: string) => {\n      switch (property) {\n        // insertion point for specific sorting accessor\n        case 'Name':\n          return ressourceDB.Name;\n\n        default:\n          return RessourceDB[property];\n      }\n    };\n\n    // enable filtering on all fields (including pointers and reverse pointer, which is not done by default)\n    this.matTableDataSource.filterPredicate = (ressourceDB: RessourceDB, filter: string) => {\n\n      // filtering is based on finding a lower case filter into a concatenated string\n      // the ressourceDB properties\n      let mergedContent = \"\"\n\n      // insertion point for merging of fields\n      mergedContent += ressourceDB.Name.toLowerCase()\n\n      let isSelected = mergedContent.includes(filter.toLowerCase())\n      return isSelected\n    };\n\n    this.matTableDataSource.sort = this.sort;\n    this.matTableDataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.matTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(\n    private ressourceService: RessourceService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of ressource instances\n    public dialogRef: MatDialogRef<RessourcesTableComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n\n    // compute mode\n    if (dialogData == undefined) {\n      this.mode = TableComponentMode.DISPLAY_MODE\n    } else {\n      switch (dialogData.SelectionMode) {\n        case SelectionMode.ONE_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.ONE_MANY_ASSOCIATION_MODE\n          break\n        case SelectionMode.MANY_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.MANY_MANY_ASSOCIATION_MODE\n          break\n        default:\n      }\n    }\n\n    // observable for changes in structs\n    this.ressourceService.RessourceServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.getRessources()\n        }\n      }\n    )\n    if (this.mode == TableComponentMode.DISPLAY_MODE) {\n      this.displayedColumns = ['ID', 'Edit', 'Delete', // insertion point for columns to display\n        \"Name\",\n      ]\n    } else {\n      this.displayedColumns = ['select', 'ID', // insertion point for columns to display\n        \"Name\",\n      ]\n      this.selection = new SelectionModel<RessourceDB>(allowMultiSelect, this.initialSelection);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getRessources()\n    this.matTableDataSource = new MatTableDataSource(this.ressources)\n  }\n\n  getRessources(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        this.ressources = this.frontRepo.Ressources_array;\n\n        // insertion point for variables Recoveries\n\n        // in case the component is called as a selection component\n        if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n          this.ressources.forEach(\n            ressource => {\n              let ID = this.dialogData.ID\n              let revPointer = ressource[this.dialogData.ReversePointer]\n              if (revPointer.Int64 == ID) {\n                this.initialSelection.push(ressource)\n              }\n            }\n          )\n          this.selection = new SelectionModel<RessourceDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n          let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n          let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n          if (sourceInstance[this.dialogData.SourceField]) {\n            for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n              let ressource = associationInstance[this.dialogData.IntermediateStructField]\n              this.initialSelection.push(ressource)\n            }\n          }\n          this.selection = new SelectionModel<RessourceDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        // update the mat table data source\n        this.matTableDataSource.data = this.ressources\n      }\n    )\n  }\n\n  // newRessource initiate a new ressource\n  // create a new Ressource objet\n  newRessource() {\n  }\n\n  deleteRessource(ressourceID: number, ressource: RessourceDB) {\n    // list of ressources is truncated of ressource before the delete\n    this.ressources = this.ressources.filter(h => h !== ressource);\n\n    this.ressourceService.deleteRessource(ressourceID).subscribe(\n      ressource => {\n        this.ressourceService.RessourceServiceChanged.next(\"delete\")\n      }\n    );\n  }\n\n  editRessource(ressourceID: number, ressource: RessourceDB) {\n\n  }\n\n  // display ressource in router\n  displayRessourceInRouter(ressourceID: number) {\n    this.router.navigate([\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ressource-display\", ressourceID])\n  }\n\n  // set editor outlet\n  setEditorRouterOutlet(ressourceID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ressource-detail\", ressourceID]\n      }\n    }]);\n  }\n\n  // set presentation outlet\n  setPresentationRouterOutlet(ressourceID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ressource-presentation\", ressourceID]\n      }\n    }]);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.ressources.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.ressources.forEach(row => this.selection.select(row));\n  }\n\n  save() {\n\n    if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n\n      let toUpdate = new Set<RessourceDB>()\n\n      // reset all initial selection of ressource that belong to ressource\n      this.initialSelection.forEach(\n        ressource => {\n          ressource[this.dialogData.ReversePointer].Int64 = 0\n          ressource[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(ressource)\n        }\n      )\n\n      // from selection, set ressource that belong to ressource\n      this.selection.selected.forEach(\n        ressource => {\n          let ID = +this.dialogData.ID\n          ressource[this.dialogData.ReversePointer].Int64 = ID\n          ressource[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(ressource)\n        }\n      )\n\n      // update all ressource (only update selection & initial selection)\n      toUpdate.forEach(\n        ressource => {\n          this.ressourceService.updateRessource(ressource)\n            .subscribe(ressource => {\n              this.ressourceService.RessourceServiceChanged.next(\"update\")\n            });\n        }\n      )\n    }\n\n    if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n      let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n      let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n      // First, parse all instance of the association struct and remove the instance\n      // that have unselect\n      let unselectedRessource = new Set<number>()\n      for (let ressource of this.initialSelection) {\n        if (this.selection.selected.includes(ressource)) {\n          // console.log(\"ressource \" + ressource.Name + \" is still selected\")\n        } else {\n          console.log(\"ressource \" + ressource.Name + \" has been unselected\")\n          unselectedRessource.add(ressource.ID)\n          console.log(\"is unselected \" + unselectedRessource.has(ressource.ID))\n        }\n      }\n\n      // delete the association instance\n      if (sourceInstance[this.dialogData.SourceField]) {\n        for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n          let ressource = associationInstance[this.dialogData.IntermediateStructField]\n          if (unselectedRessource.has(ressource.ID)) {\n\n            this.frontRepoService.deleteService( this.dialogData.IntermediateStruct, associationInstance )\n          }\n        }\n      }\n\n      // is the source array is emptyn create it\n      if (sourceInstance[this.dialogData.SourceField] == undefined) {\n        sourceInstance[this.dialogData.SourceField] = new Array<any>()\n      }\n\n      // second, parse all instance of the selected\n      if (sourceInstance[this.dialogData.SourceField]) {\n        this.selection.selected.forEach(\n          ressource => {\n            if (!this.initialSelection.includes(ressource)) {\n              // console.log(\"ressource \" + ressource.Name + \" has been added to the selection\")\n\n              let associationInstance = {\n                Name: sourceInstance[\"Name\"] + \"-\" + ressource.Name,\n              }\n\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"] = new NullInt64\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Int64 = ressource.ID\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Valid = true\n\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"] = new NullInt64\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Int64 = sourceInstance[\"ID\"]\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Valid = true\n\n              this.frontRepoService.postService( this.dialogData.IntermediateStruct, associationInstance )\n\n            } else {\n              // console.log(\"ressource \" + ressource.Name + \" is still selected\")\n            }\n          }\n        )\n      }\n\n      // this.selection = new SelectionModel<RessourceDB>(allowMultiSelect, this.initialSelection);\n    }\n\n    // why pizza ?\n    this.dialogRef.close('Pizza!');\n  }\n}\n","<div>\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n    </mat-form-field>\n    <h1 *ngIf=\"dialogData\">ressource</h1>\n    <table class=\"table\" mat-table [dataSource]=\"matTableDataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <!-- insertion point for fields specific code -->\n        <!-- -->\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let Ressource\">\n                {{Ressource.Name}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ID\" sticky>\n            <th mat-header-cell *matHeaderCellDef> ID. </th>\n            <td mat-cell *matCellDef=\"let Ressource\"> {{Ressource.ID}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let ressource;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"setEditorRouterOutlet(ressource.ID)\">edit</i>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let ressource;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"deleteRessource(ressource.ID, ressource)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\n        <tr mat-row *matRowDef=\"\n        let row; \n        columns: displayedColumns;\n        \" (click)=\"setPresentationRouterOutlet( row.ID ) \" class=\"row-link\">\n        </tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100, 500, 1000]\" showFirstLastButtons></mat-paginator>\n</div>\n<button class=\"table__save\" color=\"primary\" *ngIf=\"dialogData\" mat-raised-button (click)=\"save()\">\n    Save\n</button>","// insertion point for imports\n\n// usefull for managing pointer ID values that can be nullable\nimport { NullInt64 } from './front-repo.service'\n\nexport class RessourceDB {\n\tCreatedAt?: string;\n\tDeletedAt?: string;\n\tID?: number;\n\n\t// insertion point for basic fields declarations\n\tName?: string\n\n\t// insertion point for other declarations\n}\n","// generated from NgDetailTemplateTS\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { TaskDB } from '../task-db'\nimport { TaskService } from '../task.service'\n\nimport { FrontRepoService, FrontRepo, SelectionMode, DialogData } from '../front-repo.service'\nimport { MapOfComponents } from '../map-components'\nimport { MapOfSortingComponents } from '../map-components'\n\n// insertion point for imports\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\n\nimport { NullInt64 } from '../front-repo.service'\n\n// TaskDetailComponent is initilizaed from different routes\n// TaskDetailComponentState detail different cases \nenum TaskDetailComponentState {\n\tCREATE_INSTANCE,\n\tUPDATE_INSTANCE,\n\t// insertion point for declarations of enum values of state\n\tCREATE_INSTANCE_WITH_ASSOCIATION_GanttChart_Tasks_SET,\n}\n\n@Component({\n\tselector: 'app-task-detail',\n\ttemplateUrl: './task-detail.component.html',\n\tstyleUrls: ['./task-detail.component.css'],\n})\nexport class TaskDetailComponent implements OnInit {\n\n\t// insertion point for declarations\n\tDuration_Hours: number\n\tDuration_Minutes: number\n\tDuration_Seconds: number\n\n\t// the TaskDB of interest\n\ttask: TaskDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n\n\t// this stores the information related to string fields\n\t// if false, the field is inputed with an <input ...> form \n\t// if true, it is inputed with a <textarea ...> </textarea>\n\tmapFields_displayAsTextArea = new Map<string, boolean>()\n\n\t// the state at initialization (CREATION, UPDATE or CREATE with one association set)\n\tstate: TaskDetailComponentState\n\n\t// in UDPATE state, if is the id of the instance to update\n\t// in CREATE state with one association set, this is the id of the associated instance\n\tid: number\n\n\t// in CREATE state with one association set, this is the id of the associated instance\n\toriginStruct: string\n\toriginStructFieldName: string\n\n\tconstructor(\n\t\tprivate taskService: TaskService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tpublic dialog: MatDialog,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t}\n\n\tngOnInit(): void {\n\n\t\t// compute state\n\t\tthis.id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.originStruct = this.route.snapshot.paramMap.get('originStruct');\n\t\tthis.originStructFieldName = this.route.snapshot.paramMap.get('originStructFieldName');\n\n\t\tconst association = this.route.snapshot.paramMap.get('association');\n\t\tif (this.id == 0) {\n\t\t\tthis.state = TaskDetailComponentState.CREATE_INSTANCE\n\t\t} else {\n\t\t\tif (this.originStruct == undefined) {\n\t\t\t\tthis.state = TaskDetailComponentState.UPDATE_INSTANCE\n\t\t\t} else {\n\t\t\t\tswitch (this.originStructFieldName) {\n\t\t\t\t\t// insertion point for state computation\n\t\t\t\t\tcase \"Tasks\":\n\t\t\t\t\t\tconsole.log(\"Task\" + \" is instanciated with back pointer to instance \" + this.id + \" GanttChart association Tasks\")\n\t\t\t\t\t\tthis.state = TaskDetailComponentState.CREATE_INSTANCE_WITH_ASSOCIATION_GanttChart_Tasks_SET\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.originStructFieldName + \" is unkown association\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.getTask()\n\n\t\t// observable for changes in structs\n\t\tthis.taskService.TaskServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"post\" || message == \"update\" || message == \"delete\") {\n\t\t\t\t\tthis.getTask()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\t// insertion point for initialisation of enums list\n\t}\n\n\tgetTask(): void {\n\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase TaskDetailComponentState.CREATE_INSTANCE:\n\t\t\t\t\t\tthis.task = new (TaskDB)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TaskDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\t\t\tthis.task = frontRepo.Tasks.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// insertion point for init of association field\n\t\t\t\t\tcase TaskDetailComponentState.CREATE_INSTANCE_WITH_ASSOCIATION_GanttChart_Tasks_SET:\n\t\t\t\t\t\tthis.task = new (TaskDB)\n\t\t\t\t\t\tthis.task.GanttChart_Tasks_reverse = frontRepo.GanttCharts.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.state + \" is unkown state\")\n\t\t\t\t}\n\n\t\t\t\t// insertion point for recovery of form controls value for bool fields\n\t\t\t\t// computation of Hours, Minutes, Seconds for Duration\n\t\t\t\tthis.Duration_Hours = Math.floor(this.task.Duration / (3600 * 1000 * 1000 * 1000))\n\t\t\t\tthis.Duration_Minutes = Math.floor(this.task.Duration % (3600 * 1000 * 1000 * 1000) / (60 * 1000 * 1000 * 1000))\n\t\t\t\tthis.Duration_Seconds = this.task.Duration % (60 * 1000 * 1000 * 1000) / (1000 * 1000 * 1000)\n\t\t\t}\n\t\t)\n\n\n\t}\n\n\tsave(): void {\n\n\t\t// some fields needs to be translated into serializable forms\n\t\t// pointers fields, after the translation, are nulled in order to perform serialization\n\n\t\t// insertion point for translation/nullation of each field\n\t\tif (this.task.RessourceID == undefined) {\n\t\t\tthis.task.RessourceID = new NullInt64\n\t\t}\n\t\tif (this.task.Ressource != undefined) {\n\t\t\tthis.task.RessourceID.Int64 = this.task.Ressource.ID\n\t\t\tthis.task.RessourceID.Valid = true\n\t\t} else {\n\t\t\tthis.task.RessourceID.Int64 = 0\n\t\t\tthis.task.RessourceID.Valid = true\n\t\t}\n\t\tthis.task.Duration =\n\t\t\tthis.Duration_Hours * (3600 * 1000 * 1000 * 1000) +\n\t\t\tthis.Duration_Minutes * (60 * 1000 * 1000 * 1000) +\n\t\t\tthis.Duration_Seconds * (1000 * 1000 * 1000)\n\n\t\t// save from the front pointer space to the non pointer space for serialization\n\n\t\t// insertion point for translation/nullation of each pointers\n\t\tif (this.task.GanttChart_Tasks_reverse != undefined) {\n\t\t\tif (this.task.GanttChart_TasksDBID == undefined) {\n\t\t\t\tthis.task.GanttChart_TasksDBID = new NullInt64\n\t\t\t}\n\t\t\tthis.task.GanttChart_TasksDBID.Int64 = this.task.GanttChart_Tasks_reverse.ID\n\t\t\tthis.task.GanttChart_TasksDBID.Valid = true\n\t\t\tif (this.task.GanttChart_TasksDBID_Index == undefined) {\n\t\t\t\tthis.task.GanttChart_TasksDBID_Index = new NullInt64\n\t\t\t}\n\t\t\tthis.task.GanttChart_TasksDBID_Index.Valid = true\n\t\t\tthis.task.GanttChart_Tasks_reverse = undefined // very important, otherwise, circular JSON\n\t\t}\n\n\t\tswitch (this.state) {\n\t\t\tcase TaskDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\tthis.taskService.updateTask(this.task)\n\t\t\t\t\t.subscribe(task => {\n\t\t\t\t\t\tthis.taskService.TaskServiceChanged.next(\"update\")\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.taskService.postTask(this.task).subscribe(task => {\n\t\t\t\t\tthis.taskService.TaskServiceChanged.next(\"post\")\n\t\t\t\t\tthis.task = {} // reset fields\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// openReverseSelection is a generic function that calls dialog for the edition of \n\t// ONE-MANY association\n\t// It uses the MapOfComponent provided by the front repo\n\topenReverseSelection(AssociatedStruct: string, reverseField: string, selectionMode: string,\n\t\tsourceField: string, intermediateStructField: string, nextAssociatedStruct: string ) {\n\n\t\tconsole.log(\"mode \" + selectionMode)\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\tlet dialogData = new DialogData();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"50%\"\n\t\tdialogConfig.height = \"50%\"\n\t\tif (selectionMode == SelectionMode.ONE_MANY_ASSOCIATION_MODE) {\n\n\t\t\tdialogData.ID = this.task.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(AssociatedStruct).get(\n\t\t\t\t\tAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\t\tif (selectionMode == SelectionMode.MANY_MANY_ASSOCIATION_MODE) {\n\t\t\tdialogData.ID = this.task.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\t// set up the source\n\t\t\tdialogData.SourceStruct = \"Task\"\n\t\t\tdialogData.SourceField = sourceField\n\n\t\t\t// set up the intermediate struct\n\t\t\tdialogData.IntermediateStruct = AssociatedStruct\n\t\t\tdialogData.IntermediateStructField = intermediateStructField\n\n\t\t\t// set up the end struct\n\t\t\tdialogData.NextAssociationStruct = nextAssociatedStruct\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(nextAssociatedStruct).get(\n\t\t\t\t\tnextAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\n\t}\n\n\topenDragAndDropOrdering(AssociatedStruct: string, reverseField: string) {\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.data = {\n\t\t\tID: this.task.ID,\n\t\t\tReversePointer: reverseField,\n\t\t\tOrderingMode: true,\n\t\t};\n\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\tMapOfSortingComponents.get(AssociatedStruct).get(\n\t\t\t\tAssociatedStruct + 'SortingComponent'\n\t\t\t),\n\t\t\tdialogConfig\n\t\t);\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t});\n\t}\n\n\tfillUpNameIfEmpty(event) {\n\t\tif (this.task.Name == undefined) {\n\t\t\tthis.task.Name = event.value.Name\n\t\t}\n\t}\n\n\ttoggleTextArea(fieldName: string) {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\tlet displayAsTextArea = this.mapFields_displayAsTextArea.get(fieldName)\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, !displayAsTextArea)\n\t\t} else {\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, true)\n\t\t}\n\t}\n\n\tisATextArea(fieldName: string): boolean {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\treturn this.mapFields_displayAsTextArea.get(fieldName)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tcompareObjects(o1: any, o2: any) {\n\t\tif (o1?.ID == o2?.ID) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n}\n","<form *ngIf=\"task\" class=\"details\">\n    <h2 class=\"details__title\">task</h2>\n    <!-- insertion point for fields specific code -->\n    <mat-grid-list *ngIf='!isATextArea(\"Name\")' cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <mat-form-field mat-form-field class=\"detail-full-width\">\n                <mat-label>Name</mat-label>\n                <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.Name\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"toggleTextArea('Name')\">\n                <mat-icon>\n                    expand_more\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-form-field *ngIf='isATextArea(\"Name\")' mat-form-field class=\"detail-full-width\">\n        <mat-label>Name</mat-label>\n        <textarea name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.Name\"></textarea>\n    </mat-form-field>\n\n    <mat-grid-list *ngIf='!isATextArea(\"DisplayedName\")' cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <mat-form-field mat-form-field class=\"detail-full-width\">\n                <mat-label>DisplayedName</mat-label>\n                <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.DisplayedName\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"toggleTextArea('DisplayedName')\">\n                <mat-icon>\n                    expand_more\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-form-field *ngIf='isATextArea(\"DisplayedName\")' mat-form-field class=\"detail-full-width\">\n        <mat-label>DisplayedName</mat-label>\n        <textarea name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.DisplayedName\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>Ressource</mat-label>\n        <mat-select [compareWith]=\"compareObjects\" [(value)]=\"task.Ressource\" (selectionChange)=\"fillUpNameIfEmpty($event)\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let ressource of frontRepo.Ressources_array\" [value]=\"ressource\">\n                {{ressource.Name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <!-- -->\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>Start</mat-label>\n        <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.Start\">\n    </mat-form-field>\n\n    <!-- -->\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>End</mat-label>\n        <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.End\">\n    </mat-form-field>\n\n    <!-- -->\n    <mat-grid-list cols=\"3\" rowHeight=\"4:1\">\n        <mat-grid-tile>\n            <mat-form-field class=\"details_hours_width\">\n                <mat-label>Duration Hours</mat-label>\n                <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"Duration_Hours\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <mat-form-field class=\"details_minutes_width\">\n                <mat-label>Duration Minutes</mat-label>\n                <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"Duration_Minutes\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <mat-form-field class=\"details_seconds_width\">\n                <mat-label>Duration Seconds</mat-label>\n                <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"Duration_Seconds\">\n            </mat-form-field>\n        </mat-grid-tile>\n    </mat-grid-list>\n\n    <!-- -->\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>PercentComplete</mat-label>\n        <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.PercentComplete\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n\n    <mat-grid-list cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <button mat-raised-button (click)=\"openReverseSelection('Dependency', 'Task_DependenciesDBID', 'ONE_MANY_ASSOCIATION_MODE', '', '', '')\">Dependencies</button>\n        </mat-grid-tile>\n        <!-- insertion point for the button of the MANY_MANY association-->\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"openDragAndDropOrdering('Dependency', 'Task_DependenciesDBID')\">\n                <mat-icon>\n                    shuffle\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <!-- -->\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>Rank</mat-label>\n        <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"task.Rank\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>(GanttChart) Tasks</mat-label>\n        <mat-select [compareWith]=\"compareObjects\" [(ngModel)]=\"task.GanttChart_Tasks_reverse\" [ngModelOptions]=\"{standalone: true}\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let ganttchart of frontRepo.GanttCharts_array\" [value]=\"ganttchart\">\n                {{ganttchart.Name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div class=\"details__save\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">\n            Save task\n        </button>\n    </div>\n</form>","/*\n * Public API Surface of gonggooglechartspecific\n */\n\nexport * from './lib/gonggooglechartspecific.service';\nexport * from './lib/gonggooglechartspecific.component';\nexport * from './lib/gonggooglechartspecific.module';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GonggooglechartspecificService {\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { GonggooglechartspecificComponent } from './gonggooglechartspecific.component';\nimport { GanttchartComponent } from './ganttchart/ganttchart.component';\nimport { BrowserModule } from '@angular/platform-browser'\nimport { GoogleChartsModule } from 'angular-google-charts';\n\nimport { MatToolbarModule } from '@angular/material/toolbar'\n\n\n\n@NgModule({\n  declarations: [\n    GonggooglechartspecificComponent,\n    GanttchartComponent\n  ],\n  imports: [\n    BrowserModule,\n    GoogleChartsModule,\n    MatToolbarModule\n  ],\n  exports: [\n    GonggooglechartspecificComponent,\n    GanttchartComponent\n  ]\n})\nexport class GonggooglechartspecificModule { }\n","import { Injectable, Component, Inject } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DOCUMENT, Location } from '@angular/common'\n\n/*\n * Behavior subject\n */\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommitNbService {\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n\n    private commitNbUrl: string\n\n    constructor(\n        private http: HttpClient,\n        private location: Location,\n        @Inject(DOCUMENT) private document: Document\n    ) {\n        // path to the service share the same origin with the path to the document\n        // get the origin in the URL to the document\n        let origin = this.document.location.origin\n\n        // if debugging with ng, replace 4200 with 8080\n        origin = origin.replace(\"4200\", \"8080\")\n\n        // compute path to the service\n        this.commitNbUrl = origin + '/api/github.com/fullstack-lang/gonggooglecharts/go/commitnb';\n    }\n\n    // observable of the commit nb getter\n    public getCommitNb(): Observable<number> {\n        return this.http.get<number>(this.commitNbUrl)\n            .pipe(\n                tap(_ => this.log('fetched commit nb')),\n                catchError(this.handleError<number>('getCommitNb', -1))\n            );\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // TODO: better job of transforming error for user consumption\n            this.log('${operation} failed: ${error.message}');\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    private log(message: string) {\n\n    }\n}\n","// generated from NgDetailTemplateTS\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DependencyDB } from '../dependency-db'\nimport { DependencyService } from '../dependency.service'\n\nimport { FrontRepoService, FrontRepo, SelectionMode, DialogData } from '../front-repo.service'\nimport { MapOfComponents } from '../map-components'\nimport { MapOfSortingComponents } from '../map-components'\n\n// insertion point for imports\n\nimport { Router, RouterState, ActivatedRoute } from '@angular/router';\n\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\n\nimport { NullInt64 } from '../front-repo.service'\n\n// DependencyDetailComponent is initilizaed from different routes\n// DependencyDetailComponentState detail different cases \nenum DependencyDetailComponentState {\n\tCREATE_INSTANCE,\n\tUPDATE_INSTANCE,\n\t// insertion point for declarations of enum values of state\n\tCREATE_INSTANCE_WITH_ASSOCIATION_Task_Dependencies_SET,\n}\n\n@Component({\n\tselector: 'app-dependency-detail',\n\ttemplateUrl: './dependency-detail.component.html',\n\tstyleUrls: ['./dependency-detail.component.css'],\n})\nexport class DependencyDetailComponent implements OnInit {\n\n\t// insertion point for declarations\n\n\t// the DependencyDB of interest\n\tdependency: DependencyDB;\n\n\t// front repo\n\tfrontRepo: FrontRepo\n\n\t// this stores the information related to string fields\n\t// if false, the field is inputed with an <input ...> form \n\t// if true, it is inputed with a <textarea ...> </textarea>\n\tmapFields_displayAsTextArea = new Map<string, boolean>()\n\n\t// the state at initialization (CREATION, UPDATE or CREATE with one association set)\n\tstate: DependencyDetailComponentState\n\n\t// in UDPATE state, if is the id of the instance to update\n\t// in CREATE state with one association set, this is the id of the associated instance\n\tid: number\n\n\t// in CREATE state with one association set, this is the id of the associated instance\n\toriginStruct: string\n\toriginStructFieldName: string\n\n\tconstructor(\n\t\tprivate dependencyService: DependencyService,\n\t\tprivate frontRepoService: FrontRepoService,\n\t\tpublic dialog: MatDialog,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t) {\n\t}\n\n\tngOnInit(): void {\n\n\t\t// compute state\n\t\tthis.id = +this.route.snapshot.paramMap.get('id');\n\t\tthis.originStruct = this.route.snapshot.paramMap.get('originStruct');\n\t\tthis.originStructFieldName = this.route.snapshot.paramMap.get('originStructFieldName');\n\n\t\tconst association = this.route.snapshot.paramMap.get('association');\n\t\tif (this.id == 0) {\n\t\t\tthis.state = DependencyDetailComponentState.CREATE_INSTANCE\n\t\t} else {\n\t\t\tif (this.originStruct == undefined) {\n\t\t\t\tthis.state = DependencyDetailComponentState.UPDATE_INSTANCE\n\t\t\t} else {\n\t\t\t\tswitch (this.originStructFieldName) {\n\t\t\t\t\t// insertion point for state computation\n\t\t\t\t\tcase \"Dependencies\":\n\t\t\t\t\t\tconsole.log(\"Dependency\" + \" is instanciated with back pointer to instance \" + this.id + \" Task association Dependencies\")\n\t\t\t\t\t\tthis.state = DependencyDetailComponentState.CREATE_INSTANCE_WITH_ASSOCIATION_Task_Dependencies_SET\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.originStructFieldName + \" is unkown association\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.getDependency()\n\n\t\t// observable for changes in structs\n\t\tthis.dependencyService.DependencyServiceChanged.subscribe(\n\t\t\tmessage => {\n\t\t\t\tif (message == \"post\" || message == \"update\" || message == \"delete\") {\n\t\t\t\t\tthis.getDependency()\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\t// insertion point for initialisation of enums list\n\t}\n\n\tgetDependency(): void {\n\n\t\tthis.frontRepoService.pull().subscribe(\n\t\t\tfrontRepo => {\n\t\t\t\tthis.frontRepo = frontRepo\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase DependencyDetailComponentState.CREATE_INSTANCE:\n\t\t\t\t\t\tthis.dependency = new (DependencyDB)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase DependencyDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\t\t\tthis.dependency = frontRepo.Dependencys.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// insertion point for init of association field\n\t\t\t\t\tcase DependencyDetailComponentState.CREATE_INSTANCE_WITH_ASSOCIATION_Task_Dependencies_SET:\n\t\t\t\t\t\tthis.dependency = new (DependencyDB)\n\t\t\t\t\t\tthis.dependency.Task_Dependencies_reverse = frontRepo.Tasks.get(this.id)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(this.state + \" is unkown state\")\n\t\t\t\t}\n\n\t\t\t\t// insertion point for recovery of form controls value for bool fields\n\t\t\t}\n\t\t)\n\n\n\t}\n\n\tsave(): void {\n\n\t\t// some fields needs to be translated into serializable forms\n\t\t// pointers fields, after the translation, are nulled in order to perform serialization\n\n\t\t// insertion point for translation/nullation of each field\n\t\tif (this.dependency.TaskID == undefined) {\n\t\t\tthis.dependency.TaskID = new NullInt64\n\t\t}\n\t\tif (this.dependency.Task != undefined) {\n\t\t\tthis.dependency.TaskID.Int64 = this.dependency.Task.ID\n\t\t\tthis.dependency.TaskID.Valid = true\n\t\t} else {\n\t\t\tthis.dependency.TaskID.Int64 = 0\n\t\t\tthis.dependency.TaskID.Valid = true\n\t\t}\n\n\t\t// save from the front pointer space to the non pointer space for serialization\n\n\t\t// insertion point for translation/nullation of each pointers\n\t\tif (this.dependency.Task_Dependencies_reverse != undefined) {\n\t\t\tif (this.dependency.Task_DependenciesDBID == undefined) {\n\t\t\t\tthis.dependency.Task_DependenciesDBID = new NullInt64\n\t\t\t}\n\t\t\tthis.dependency.Task_DependenciesDBID.Int64 = this.dependency.Task_Dependencies_reverse.ID\n\t\t\tthis.dependency.Task_DependenciesDBID.Valid = true\n\t\t\tif (this.dependency.Task_DependenciesDBID_Index == undefined) {\n\t\t\t\tthis.dependency.Task_DependenciesDBID_Index = new NullInt64\n\t\t\t}\n\t\t\tthis.dependency.Task_DependenciesDBID_Index.Valid = true\n\t\t\tthis.dependency.Task_Dependencies_reverse = undefined // very important, otherwise, circular JSON\n\t\t}\n\n\t\tswitch (this.state) {\n\t\t\tcase DependencyDetailComponentState.UPDATE_INSTANCE:\n\t\t\t\tthis.dependencyService.updateDependency(this.dependency)\n\t\t\t\t\t.subscribe(dependency => {\n\t\t\t\t\t\tthis.dependencyService.DependencyServiceChanged.next(\"update\")\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.dependencyService.postDependency(this.dependency).subscribe(dependency => {\n\t\t\t\t\tthis.dependencyService.DependencyServiceChanged.next(\"post\")\n\t\t\t\t\tthis.dependency = {} // reset fields\n\t\t\t\t});\n\t\t}\n\t}\n\n\t// openReverseSelection is a generic function that calls dialog for the edition of \n\t// ONE-MANY association\n\t// It uses the MapOfComponent provided by the front repo\n\topenReverseSelection(AssociatedStruct: string, reverseField: string, selectionMode: string,\n\t\tsourceField: string, intermediateStructField: string, nextAssociatedStruct: string ) {\n\n\t\tconsole.log(\"mode \" + selectionMode)\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\tlet dialogData = new DialogData();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"50%\"\n\t\tdialogConfig.height = \"50%\"\n\t\tif (selectionMode == SelectionMode.ONE_MANY_ASSOCIATION_MODE) {\n\n\t\t\tdialogData.ID = this.dependency.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(AssociatedStruct).get(\n\t\t\t\t\tAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\t\tif (selectionMode == SelectionMode.MANY_MANY_ASSOCIATION_MODE) {\n\t\t\tdialogData.ID = this.dependency.ID\n\t\t\tdialogData.ReversePointer = reverseField\n\t\t\tdialogData.OrderingMode = false\n\t\t\tdialogData.SelectionMode = selectionMode\n\n\t\t\t// set up the source\n\t\t\tdialogData.SourceStruct = \"Dependency\"\n\t\t\tdialogData.SourceField = sourceField\n\n\t\t\t// set up the intermediate struct\n\t\t\tdialogData.IntermediateStruct = AssociatedStruct\n\t\t\tdialogData.IntermediateStructField = intermediateStructField\n\n\t\t\t// set up the end struct\n\t\t\tdialogData.NextAssociationStruct = nextAssociatedStruct\n\n\t\t\tdialogConfig.data = dialogData\n\t\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\t\tMapOfComponents.get(nextAssociatedStruct).get(\n\t\t\t\t\tnextAssociatedStruct + 'sTableComponent'\n\t\t\t\t),\n\t\t\t\tdialogConfig\n\t\t\t);\n\t\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\t});\n\t\t}\n\n\t}\n\n\topenDragAndDropOrdering(AssociatedStruct: string, reverseField: string) {\n\n\t\tconst dialogConfig = new MatDialogConfig();\n\n\t\t// dialogConfig.disableClose = true;\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.data = {\n\t\t\tID: this.dependency.ID,\n\t\t\tReversePointer: reverseField,\n\t\t\tOrderingMode: true,\n\t\t};\n\t\tconst dialogRef: MatDialogRef<string, any> = this.dialog.open(\n\t\t\tMapOfSortingComponents.get(AssociatedStruct).get(\n\t\t\t\tAssociatedStruct + 'SortingComponent'\n\t\t\t),\n\t\t\tdialogConfig\n\t\t);\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t});\n\t}\n\n\tfillUpNameIfEmpty(event) {\n\t\tif (this.dependency.Name == undefined) {\n\t\t\tthis.dependency.Name = event.value.Name\n\t\t}\n\t}\n\n\ttoggleTextArea(fieldName: string) {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\tlet displayAsTextArea = this.mapFields_displayAsTextArea.get(fieldName)\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, !displayAsTextArea)\n\t\t} else {\n\t\t\tthis.mapFields_displayAsTextArea.set(fieldName, true)\n\t\t}\n\t}\n\n\tisATextArea(fieldName: string): boolean {\n\t\tif (this.mapFields_displayAsTextArea.has(fieldName)) {\n\t\t\treturn this.mapFields_displayAsTextArea.get(fieldName)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tcompareObjects(o1: any, o2: any) {\n\t\tif (o1?.ID == o2?.ID) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false\n\t\t}\n\t}\n}\n","<form *ngIf=\"dependency\" class=\"details\">\n    <h2 class=\"details__title\">dependency</h2>\n    <!-- insertion point for fields specific code -->\n    <mat-grid-list *ngIf='!isATextArea(\"Name\")' cols=\"5\" rowHeight=\"2:1\">\n        <mat-grid-tile [colspan]=\"3\">\n            <mat-form-field mat-form-field class=\"detail-full-width\">\n                <mat-label>Name</mat-label>\n                <input name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"dependency.Name\">\n            </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button mat-raised-button (click)=\"toggleTextArea('Name')\">\n                <mat-icon>\n                    expand_more\n                </mat-icon>\n            </button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <mat-form-field *ngIf='isATextArea(\"Name\")' mat-form-field class=\"detail-full-width\">\n        <mat-label>Name</mat-label>\n        <textarea name=\"\" [ngModelOptions]=\"{standalone: true}\" matInput [(ngModel)]=\"dependency.Name\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>Task</mat-label>\n        <mat-select [compareWith]=\"compareObjects\" [(value)]=\"dependency.Task\" (selectionChange)=\"fillUpNameIfEmpty($event)\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let task of frontRepo.Tasks_array\" [value]=\"task\">\n                {{task.Name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"detail-full-width\">\n        <mat-label>(Task) Dependencies</mat-label>\n        <mat-select [compareWith]=\"compareObjects\" [(ngModel)]=\"dependency.Task_Dependencies_reverse\" [ngModelOptions]=\"{standalone: true}\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let task of frontRepo.Tasks_array\" [value]=\"task\">\n                {{task.Name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div class=\"details__save\">\n        <button mat-raised-button color=\"primary\" (click)=\"save()\">\n            Save dependency\n        </button>\n    </div>\n</form>","// generated by gong\nimport { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { Router, RouterState } from '@angular/router';\nimport { GanttChartDB } from '../ganttchart-db'\nimport { GanttChartService } from '../ganttchart.service'\n\nimport { FrontRepoService, FrontRepo, NullInt64 } from '../front-repo.service'\n@Component({\n  selector: 'lib-ganttchart-sorting',\n  templateUrl: './ganttchart-sorting.component.html',\n  styleUrls: ['./ganttchart-sorting.component.css']\n})\nexport class GanttChartSortingComponent implements OnInit {\n\n  frontRepo: FrontRepo\n\n  // array of GanttChart instances that are in the association\n  associatedGanttCharts = new Array<GanttChartDB>();\n\n  constructor(\n    private ganttchartService: GanttChartService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of ganttchart instances\n    public dialogRef: MatDialogRef<GanttChartSortingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.getGanttCharts()\n  }\n\n  getGanttCharts(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        let index = 0\n        for (let ganttchart of this.frontRepo.GanttCharts_array) {\n          let ID = this.dialogData.ID\n          let revPointerID = ganttchart[this.dialogData.ReversePointer]\n          let revPointerID_Index = ganttchart[this.dialogData.ReversePointer+\"_Index\"]\n          if (revPointerID.Int64 == ID) {\n            if (revPointerID_Index == undefined) {\n              revPointerID_Index = new NullInt64\n              revPointerID_Index.Valid = true\n              revPointerID_Index.Int64 = index++\n            }\n            this.associatedGanttCharts.push(ganttchart)\n          }\n        }\n\n        // sort associated ganttchart according to order\n        this.associatedGanttCharts.sort((t1, t2) => {\n          let t1_revPointerID_Index = t1[this.dialogData.ReversePointer+\"_Index\"]\n          let t2_revPointerID_Index = t2[this.dialogData.ReversePointer+\"_Index\"]\n          if (t1_revPointerID_Index && t2_revPointerID_Index) {\n            if (t1_revPointerID_Index.Int64 > t2_revPointerID_Index.Int64) {\n              return 1;\n            }\n            if (t1_revPointerID_Index.Int64 < t2_revPointerID_Index.Int64) {\n              return -1;\n            }  \n          }\n          return 0;\n        });\n      }\n    )\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.associatedGanttCharts, event.previousIndex, event.currentIndex);\n\n    // set the order of GanttChart instances\n    let index = 0\n    \n    for (let ganttchart of this.associatedGanttCharts) {\n      let revPointerID_Index = ganttchart[this.dialogData.ReversePointer+\"_Index\"]\n      revPointerID_Index.Valid = true\n      revPointerID_Index.Int64 = index++\n    }\n  }\n\n  save() {\n\n    this.associatedGanttCharts.forEach(\n      ganttchart => {\n        this.ganttchartService.updateGanttChart(ganttchart)\n          .subscribe(ganttchart => {\n            this.ganttchartService.GanttChartServiceChanged.next(\"update\")\n          });\n      }\n    )\n\n    this.dialogRef.close('Sorting of '+ this.dialogData.ReversePointer+' done');\n  }\n}\n","<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n<div class=\"example-box\" *ngFor=\"let ganttchart of associatedGanttCharts\" cdkDrag>{{ganttchart.Name}}</div>\n</div>\n<button class=\"table__save\" color=\"primary\" mat-raised-button (click)=\"save()\">\nSave\n</button>","// insertion point for imports\nimport { RessourceDB } from './ressource-db'\nimport { DependencyDB } from './dependency-db'\nimport { GanttChartDB } from './ganttchart-db'\n\n// usefull for managing pointer ID values that can be nullable\nimport { NullInt64 } from './front-repo.service'\n\nexport class TaskDB {\n\tCreatedAt?: string;\n\tDeletedAt?: string;\n\tID?: number;\n\n\t// insertion point for basic fields declarations\n\tName?: string\n\tDisplayedName?: string\n\tStart?: Date\n\tEnd?: Date\n\tDuration?: number\n\tPercentComplete?: number\n\tRank?: number\n\n\t// insertion point for other declarations\n\tRessource?: RessourceDB\n\tRessourceID?: NullInt64\n\n\tDuration_string?: string\n\tDependencies?: Array<DependencyDB>\n\tGanttChart_TasksDBID?: NullInt64\n\tGanttChart_TasksDBID_Index?: NullInt64 // store the index of the task instance in GanttChart.Tasks\n\tGanttChart_Tasks_reverse?: GanttChartDB\n\n}\n","// generated by gong\nimport { Component, OnInit, AfterViewInit, ViewChild, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatButton } from '@angular/material/button'\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData, FrontRepoService, FrontRepo, NullInt64, SelectionMode } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nconst allowMultiSelect = true;\n\nimport { Router, RouterState } from '@angular/router';\nimport { GanttChartDB } from '../ganttchart-db'\nimport { GanttChartService } from '../ganttchart.service'\n\n// TableComponent is initilizaed from different routes\n// TableComponentMode detail different cases \nenum TableComponentMode {\n  DISPLAY_MODE,\n  ONE_MANY_ASSOCIATION_MODE,\n  MANY_MANY_ASSOCIATION_MODE,\n}\n\n// generated table component\n@Component({\n  selector: 'app-ganttchartstable',\n  templateUrl: './ganttcharts-table.component.html',\n  styleUrls: ['./ganttcharts-table.component.css'],\n})\nexport class GanttChartsTableComponent implements OnInit {\n\n  // mode at invocation\n  mode: TableComponentMode\n\n  // used if the component is called as a selection component of GanttChart instances\n  selection: SelectionModel<GanttChartDB>;\n  initialSelection = new Array<GanttChartDB>();\n\n  // the data source for the table\n  ganttcharts: GanttChartDB[];\n  matTableDataSource: MatTableDataSource<GanttChartDB>\n\n  // front repo, that will be referenced by this.ganttcharts\n  frontRepo: FrontRepo\n\n  // displayedColumns is referenced by the MatTable component for specify what columns\n  // have to be displayed and in what order\n  displayedColumns: string[];\n\n  // for sorting & pagination\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n\n    // enable sorting on all fields (including pointers and reverse pointer)\n    this.matTableDataSource.sortingDataAccessor = (ganttchartDB: GanttChartDB, property: string) => {\n      switch (property) {\n        // insertion point for specific sorting accessor\n        case 'Name':\n          return ganttchartDB.Name;\n\n        default:\n          return GanttChartDB[property];\n      }\n    };\n\n    // enable filtering on all fields (including pointers and reverse pointer, which is not done by default)\n    this.matTableDataSource.filterPredicate = (ganttchartDB: GanttChartDB, filter: string) => {\n\n      // filtering is based on finding a lower case filter into a concatenated string\n      // the ganttchartDB properties\n      let mergedContent = \"\"\n\n      // insertion point for merging of fields\n      mergedContent += ganttchartDB.Name.toLowerCase()\n\n      let isSelected = mergedContent.includes(filter.toLowerCase())\n      return isSelected\n    };\n\n    this.matTableDataSource.sort = this.sort;\n    this.matTableDataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.matTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(\n    private ganttchartService: GanttChartService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of ganttchart instances\n    public dialogRef: MatDialogRef<GanttChartsTableComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n\n    // compute mode\n    if (dialogData == undefined) {\n      this.mode = TableComponentMode.DISPLAY_MODE\n    } else {\n      switch (dialogData.SelectionMode) {\n        case SelectionMode.ONE_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.ONE_MANY_ASSOCIATION_MODE\n          break\n        case SelectionMode.MANY_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.MANY_MANY_ASSOCIATION_MODE\n          break\n        default:\n      }\n    }\n\n    // observable for changes in structs\n    this.ganttchartService.GanttChartServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.getGanttCharts()\n        }\n      }\n    )\n    if (this.mode == TableComponentMode.DISPLAY_MODE) {\n      this.displayedColumns = ['ID', 'Edit', 'Delete', // insertion point for columns to display\n        \"Name\",\n      ]\n    } else {\n      this.displayedColumns = ['select', 'ID', // insertion point for columns to display\n        \"Name\",\n      ]\n      this.selection = new SelectionModel<GanttChartDB>(allowMultiSelect, this.initialSelection);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getGanttCharts()\n    this.matTableDataSource = new MatTableDataSource(this.ganttcharts)\n  }\n\n  getGanttCharts(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        this.ganttcharts = this.frontRepo.GanttCharts_array;\n\n        // insertion point for variables Recoveries\n\n        // in case the component is called as a selection component\n        if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n          this.ganttcharts.forEach(\n            ganttchart => {\n              let ID = this.dialogData.ID\n              let revPointer = ganttchart[this.dialogData.ReversePointer]\n              if (revPointer.Int64 == ID) {\n                this.initialSelection.push(ganttchart)\n              }\n            }\n          )\n          this.selection = new SelectionModel<GanttChartDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n          let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n          let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n          if (sourceInstance[this.dialogData.SourceField]) {\n            for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n              let ganttchart = associationInstance[this.dialogData.IntermediateStructField]\n              this.initialSelection.push(ganttchart)\n            }\n          }\n          this.selection = new SelectionModel<GanttChartDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        // update the mat table data source\n        this.matTableDataSource.data = this.ganttcharts\n      }\n    )\n  }\n\n  // newGanttChart initiate a new ganttchart\n  // create a new GanttChart objet\n  newGanttChart() {\n  }\n\n  deleteGanttChart(ganttchartID: number, ganttchart: GanttChartDB) {\n    // list of ganttcharts is truncated of ganttchart before the delete\n    this.ganttcharts = this.ganttcharts.filter(h => h !== ganttchart);\n\n    this.ganttchartService.deleteGanttChart(ganttchartID).subscribe(\n      ganttchart => {\n        this.ganttchartService.GanttChartServiceChanged.next(\"delete\")\n      }\n    );\n  }\n\n  editGanttChart(ganttchartID: number, ganttchart: GanttChartDB) {\n\n  }\n\n  // display ganttchart in router\n  displayGanttChartInRouter(ganttchartID: number) {\n    this.router.navigate([\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ganttchart-display\", ganttchartID])\n  }\n\n  // set editor outlet\n  setEditorRouterOutlet(ganttchartID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ganttchart-detail\", ganttchartID]\n      }\n    }]);\n  }\n\n  // set presentation outlet\n  setPresentationRouterOutlet(ganttchartID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"ganttchart-presentation\", ganttchartID]\n      }\n    }]);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.ganttcharts.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.ganttcharts.forEach(row => this.selection.select(row));\n  }\n\n  save() {\n\n    if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n\n      let toUpdate = new Set<GanttChartDB>()\n\n      // reset all initial selection of ganttchart that belong to ganttchart\n      this.initialSelection.forEach(\n        ganttchart => {\n          ganttchart[this.dialogData.ReversePointer].Int64 = 0\n          ganttchart[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(ganttchart)\n        }\n      )\n\n      // from selection, set ganttchart that belong to ganttchart\n      this.selection.selected.forEach(\n        ganttchart => {\n          let ID = +this.dialogData.ID\n          ganttchart[this.dialogData.ReversePointer].Int64 = ID\n          ganttchart[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(ganttchart)\n        }\n      )\n\n      // update all ganttchart (only update selection & initial selection)\n      toUpdate.forEach(\n        ganttchart => {\n          this.ganttchartService.updateGanttChart(ganttchart)\n            .subscribe(ganttchart => {\n              this.ganttchartService.GanttChartServiceChanged.next(\"update\")\n            });\n        }\n      )\n    }\n\n    if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n      let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n      let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n      // First, parse all instance of the association struct and remove the instance\n      // that have unselect\n      let unselectedGanttChart = new Set<number>()\n      for (let ganttchart of this.initialSelection) {\n        if (this.selection.selected.includes(ganttchart)) {\n          // console.log(\"ganttchart \" + ganttchart.Name + \" is still selected\")\n        } else {\n          console.log(\"ganttchart \" + ganttchart.Name + \" has been unselected\")\n          unselectedGanttChart.add(ganttchart.ID)\n          console.log(\"is unselected \" + unselectedGanttChart.has(ganttchart.ID))\n        }\n      }\n\n      // delete the association instance\n      if (sourceInstance[this.dialogData.SourceField]) {\n        for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n          let ganttchart = associationInstance[this.dialogData.IntermediateStructField]\n          if (unselectedGanttChart.has(ganttchart.ID)) {\n\n            this.frontRepoService.deleteService( this.dialogData.IntermediateStruct, associationInstance )\n          }\n        }\n      }\n\n      // is the source array is emptyn create it\n      if (sourceInstance[this.dialogData.SourceField] == undefined) {\n        sourceInstance[this.dialogData.SourceField] = new Array<any>()\n      }\n\n      // second, parse all instance of the selected\n      if (sourceInstance[this.dialogData.SourceField]) {\n        this.selection.selected.forEach(\n          ganttchart => {\n            if (!this.initialSelection.includes(ganttchart)) {\n              // console.log(\"ganttchart \" + ganttchart.Name + \" has been added to the selection\")\n\n              let associationInstance = {\n                Name: sourceInstance[\"Name\"] + \"-\" + ganttchart.Name,\n              }\n\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"] = new NullInt64\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Int64 = ganttchart.ID\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Valid = true\n\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"] = new NullInt64\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Int64 = sourceInstance[\"ID\"]\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Valid = true\n\n              this.frontRepoService.postService( this.dialogData.IntermediateStruct, associationInstance )\n\n            } else {\n              // console.log(\"ganttchart \" + ganttchart.Name + \" is still selected\")\n            }\n          }\n        )\n      }\n\n      // this.selection = new SelectionModel<GanttChartDB>(allowMultiSelect, this.initialSelection);\n    }\n\n    // why pizza ?\n    this.dialogRef.close('Pizza!');\n  }\n}\n","<div>\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n    </mat-form-field>\n    <h1 *ngIf=\"dialogData\">ganttchart</h1>\n    <table class=\"table\" mat-table [dataSource]=\"matTableDataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <!-- insertion point for fields specific code -->\n        <!-- -->\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let GanttChart\">\n                {{GanttChart.Name}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ID\" sticky>\n            <th mat-header-cell *matHeaderCellDef> ID. </th>\n            <td mat-cell *matCellDef=\"let GanttChart\"> {{GanttChart.ID}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let ganttchart;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"setEditorRouterOutlet(ganttchart.ID)\">edit</i>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let ganttchart;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"deleteGanttChart(ganttchart.ID, ganttchart)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\n        <tr mat-row *matRowDef=\"\n        let row; \n        columns: displayedColumns;\n        \" (click)=\"setPresentationRouterOutlet( row.ID ) \" class=\"row-link\">\n        </tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100, 500, 1000]\" showFirstLastButtons></mat-paginator>\n</div>\n<button class=\"table__save\" color=\"primary\" *ngIf=\"dialogData\" mat-raised-button (click)=\"save()\">\n    Save\n</button>","// generated by gong\nimport { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { Router, RouterState } from '@angular/router';\nimport { DependencyDB } from '../dependency-db'\nimport { DependencyService } from '../dependency.service'\n\nimport { FrontRepoService, FrontRepo, NullInt64 } from '../front-repo.service'\n@Component({\n  selector: 'lib-dependency-sorting',\n  templateUrl: './dependency-sorting.component.html',\n  styleUrls: ['./dependency-sorting.component.css']\n})\nexport class DependencySortingComponent implements OnInit {\n\n  frontRepo: FrontRepo\n\n  // array of Dependency instances that are in the association\n  associatedDependencys = new Array<DependencyDB>();\n\n  constructor(\n    private dependencyService: DependencyService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of dependency instances\n    public dialogRef: MatDialogRef<DependencySortingComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.getDependencys()\n  }\n\n  getDependencys(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        let index = 0\n        for (let dependency of this.frontRepo.Dependencys_array) {\n          let ID = this.dialogData.ID\n          let revPointerID = dependency[this.dialogData.ReversePointer]\n          let revPointerID_Index = dependency[this.dialogData.ReversePointer+\"_Index\"]\n          if (revPointerID.Int64 == ID) {\n            if (revPointerID_Index == undefined) {\n              revPointerID_Index = new NullInt64\n              revPointerID_Index.Valid = true\n              revPointerID_Index.Int64 = index++\n            }\n            this.associatedDependencys.push(dependency)\n          }\n        }\n\n        // sort associated dependency according to order\n        this.associatedDependencys.sort((t1, t2) => {\n          let t1_revPointerID_Index = t1[this.dialogData.ReversePointer+\"_Index\"]\n          let t2_revPointerID_Index = t2[this.dialogData.ReversePointer+\"_Index\"]\n          if (t1_revPointerID_Index && t2_revPointerID_Index) {\n            if (t1_revPointerID_Index.Int64 > t2_revPointerID_Index.Int64) {\n              return 1;\n            }\n            if (t1_revPointerID_Index.Int64 < t2_revPointerID_Index.Int64) {\n              return -1;\n            }  \n          }\n          return 0;\n        });\n      }\n    )\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.associatedDependencys, event.previousIndex, event.currentIndex);\n\n    // set the order of Dependency instances\n    let index = 0\n    \n    for (let dependency of this.associatedDependencys) {\n      let revPointerID_Index = dependency[this.dialogData.ReversePointer+\"_Index\"]\n      revPointerID_Index.Valid = true\n      revPointerID_Index.Int64 = index++\n    }\n  }\n\n  save() {\n\n    this.associatedDependencys.forEach(\n      dependency => {\n        this.dependencyService.updateDependency(dependency)\n          .subscribe(dependency => {\n            this.dependencyService.DependencyServiceChanged.next(\"update\")\n          });\n      }\n    )\n\n    this.dialogRef.close('Sorting of '+ this.dialogData.ReversePointer+' done');\n  }\n}\n","<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\n<div class=\"example-box\" *ngFor=\"let dependency of associatedDependencys\" cdkDrag>{{dependency.Name}}</div>\n</div>\n<button class=\"table__save\" color=\"primary\" mat-raised-button (click)=\"save()\">\nSave\n</button>","// generated by gong\nimport { Component, OnInit, AfterViewInit, ViewChild, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatButton } from '@angular/material/button'\n\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog'\nimport { DialogData, FrontRepoService, FrontRepo, NullInt64, SelectionMode } from '../front-repo.service'\nimport { SelectionModel } from '@angular/cdk/collections';\n\nconst allowMultiSelect = true;\n\nimport { Router, RouterState } from '@angular/router';\nimport { TaskDB } from '../task-db'\nimport { TaskService } from '../task.service'\n\n// TableComponent is initilizaed from different routes\n// TableComponentMode detail different cases \nenum TableComponentMode {\n  DISPLAY_MODE,\n  ONE_MANY_ASSOCIATION_MODE,\n  MANY_MANY_ASSOCIATION_MODE,\n}\n\n// generated table component\n@Component({\n  selector: 'app-taskstable',\n  templateUrl: './tasks-table.component.html',\n  styleUrls: ['./tasks-table.component.css'],\n})\nexport class TasksTableComponent implements OnInit {\n\n  // mode at invocation\n  mode: TableComponentMode\n\n  // used if the component is called as a selection component of Task instances\n  selection: SelectionModel<TaskDB>;\n  initialSelection = new Array<TaskDB>();\n\n  // the data source for the table\n  tasks: TaskDB[];\n  matTableDataSource: MatTableDataSource<TaskDB>\n\n  // front repo, that will be referenced by this.tasks\n  frontRepo: FrontRepo\n\n  // displayedColumns is referenced by the MatTable component for specify what columns\n  // have to be displayed and in what order\n  displayedColumns: string[];\n\n  // for sorting & pagination\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n\n    // enable sorting on all fields (including pointers and reverse pointer)\n    this.matTableDataSource.sortingDataAccessor = (taskDB: TaskDB, property: string) => {\n      switch (property) {\n        // insertion point for specific sorting accessor\n        case 'Name':\n          return taskDB.Name;\n\n        case 'DisplayedName':\n          return taskDB.DisplayedName;\n\n        case 'Ressource':\n          return (taskDB.Ressource ? taskDB.Ressource.Name : '');\n\n        case 'Start':\n          return taskDB.Start;\n\n        case 'End':\n          return taskDB.End;\n\n        case 'Duration':\n          return taskDB.Duration;\n\n        case 'PercentComplete':\n          return taskDB.PercentComplete;\n\n        case 'Rank':\n          return taskDB.Rank;\n\n        case 'GanttChart_Tasks':\n          return this.frontRepo.GanttCharts.get(taskDB.GanttChart_TasksDBID.Int64)?.Name;\n\n        default:\n          return TaskDB[property];\n      }\n    };\n\n    // enable filtering on all fields (including pointers and reverse pointer, which is not done by default)\n    this.matTableDataSource.filterPredicate = (taskDB: TaskDB, filter: string) => {\n\n      // filtering is based on finding a lower case filter into a concatenated string\n      // the taskDB properties\n      let mergedContent = \"\"\n\n      // insertion point for merging of fields\n      mergedContent += taskDB.Name.toLowerCase()\n      mergedContent += taskDB.DisplayedName.toLowerCase()\n      if (taskDB.Ressource) {\n        mergedContent += taskDB.Ressource.Name.toLowerCase()\n      }\n      mergedContent += taskDB.PercentComplete.toString()\n      mergedContent += taskDB.Rank.toString()\n      if (taskDB.GanttChart_TasksDBID.Int64 != 0) {\n        mergedContent += this.frontRepo.GanttCharts.get(taskDB.GanttChart_TasksDBID.Int64)?.Name.toLowerCase()\n      }\n\n\n      let isSelected = mergedContent.includes(filter.toLowerCase())\n      return isSelected\n    };\n\n    this.matTableDataSource.sort = this.sort;\n    this.matTableDataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.matTableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(\n    private taskService: TaskService,\n    private frontRepoService: FrontRepoService,\n\n    // not null if the component is called as a selection component of task instances\n    public dialogRef: MatDialogRef<TasksTableComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public dialogData: DialogData,\n\n    private router: Router,\n  ) {\n\n    // compute mode\n    if (dialogData == undefined) {\n      this.mode = TableComponentMode.DISPLAY_MODE\n    } else {\n      switch (dialogData.SelectionMode) {\n        case SelectionMode.ONE_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.ONE_MANY_ASSOCIATION_MODE\n          break\n        case SelectionMode.MANY_MANY_ASSOCIATION_MODE:\n          this.mode = TableComponentMode.MANY_MANY_ASSOCIATION_MODE\n          break\n        default:\n      }\n    }\n\n    // observable for changes in structs\n    this.taskService.TaskServiceChanged.subscribe(\n      message => {\n        if (message == \"post\" || message == \"update\" || message == \"delete\") {\n          this.getTasks()\n        }\n      }\n    )\n    if (this.mode == TableComponentMode.DISPLAY_MODE) {\n      this.displayedColumns = ['ID', 'Edit', 'Delete', // insertion point for columns to display\n        \"Name\",\n        \"DisplayedName\",\n        \"Ressource\",\n        \"Start\",\n        \"End\",\n        \"Duration\",\n        \"PercentComplete\",\n        \"Rank\",\n        \"GanttChart_Tasks\",\n      ]\n    } else {\n      this.displayedColumns = ['select', 'ID', // insertion point for columns to display\n        \"Name\",\n        \"DisplayedName\",\n        \"Ressource\",\n        \"Start\",\n        \"End\",\n        \"Duration\",\n        \"PercentComplete\",\n        \"Rank\",\n        \"GanttChart_Tasks\",\n      ]\n      this.selection = new SelectionModel<TaskDB>(allowMultiSelect, this.initialSelection);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.getTasks()\n    this.matTableDataSource = new MatTableDataSource(this.tasks)\n  }\n\n  getTasks(): void {\n    this.frontRepoService.pull().subscribe(\n      frontRepo => {\n        this.frontRepo = frontRepo\n\n        this.tasks = this.frontRepo.Tasks_array;\n\n        // insertion point for variables Recoveries\n        // compute strings for durations\n        for (let task of this.tasks) {\n          task.Duration_string =\n            Math.floor(task.Duration / (3600 * 1000 * 1000 * 1000)) + \"H \" +\n            Math.floor(task.Duration % (3600 * 1000 * 1000 * 1000) / (60 * 1000 * 1000 * 1000)) + \"M \" +\n            task.Duration % (60 * 1000 * 1000 * 1000) / (1000 * 1000 * 1000) + \"S\"\n        }\n\n        // in case the component is called as a selection component\n        if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n          this.tasks.forEach(\n            task => {\n              let ID = this.dialogData.ID\n              let revPointer = task[this.dialogData.ReversePointer]\n              if (revPointer.Int64 == ID) {\n                this.initialSelection.push(task)\n              }\n            }\n          )\n          this.selection = new SelectionModel<TaskDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n          let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n          let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n          if (sourceInstance[this.dialogData.SourceField]) {\n            for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n              let task = associationInstance[this.dialogData.IntermediateStructField]\n              this.initialSelection.push(task)\n            }\n          }\n          this.selection = new SelectionModel<TaskDB>(allowMultiSelect, this.initialSelection);\n        }\n\n        // update the mat table data source\n        this.matTableDataSource.data = this.tasks\n      }\n    )\n  }\n\n  // newTask initiate a new task\n  // create a new Task objet\n  newTask() {\n  }\n\n  deleteTask(taskID: number, task: TaskDB) {\n    // list of tasks is truncated of task before the delete\n    this.tasks = this.tasks.filter(h => h !== task);\n\n    this.taskService.deleteTask(taskID).subscribe(\n      task => {\n        this.taskService.TaskServiceChanged.next(\"delete\")\n      }\n    );\n  }\n\n  editTask(taskID: number, task: TaskDB) {\n\n  }\n\n  // display task in router\n  displayTaskInRouter(taskID: number) {\n    this.router.navigate([\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"task-display\", taskID])\n  }\n\n  // set editor outlet\n  setEditorRouterOutlet(taskID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_editor: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"task-detail\", taskID]\n      }\n    }]);\n  }\n\n  // set presentation outlet\n  setPresentationRouterOutlet(taskID: number) {\n    this.router.navigate([{\n      outlets: {\n        github_com_fullstack_lang_gonggooglecharts_go_presentation: [\"github_com_fullstack_lang_gonggooglecharts_go-\" + \"task-presentation\", taskID]\n      }\n    }]);\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.tasks.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.tasks.forEach(row => this.selection.select(row));\n  }\n\n  save() {\n\n    if (this.mode == TableComponentMode.ONE_MANY_ASSOCIATION_MODE) {\n\n      let toUpdate = new Set<TaskDB>()\n\n      // reset all initial selection of task that belong to task\n      this.initialSelection.forEach(\n        task => {\n          task[this.dialogData.ReversePointer].Int64 = 0\n          task[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(task)\n        }\n      )\n\n      // from selection, set task that belong to task\n      this.selection.selected.forEach(\n        task => {\n          let ID = +this.dialogData.ID\n          task[this.dialogData.ReversePointer].Int64 = ID\n          task[this.dialogData.ReversePointer].Valid = true\n          toUpdate.add(task)\n        }\n      )\n\n      // update all task (only update selection & initial selection)\n      toUpdate.forEach(\n        task => {\n          this.taskService.updateTask(task)\n            .subscribe(task => {\n              this.taskService.TaskServiceChanged.next(\"update\")\n            });\n        }\n      )\n    }\n\n    if (this.mode == TableComponentMode.MANY_MANY_ASSOCIATION_MODE) {\n\n      let mapOfSourceInstances = this.frontRepo[this.dialogData.SourceStruct + \"s\"]\n      let sourceInstance = mapOfSourceInstances.get(this.dialogData.ID)\n\n      // First, parse all instance of the association struct and remove the instance\n      // that have unselect\n      let unselectedTask = new Set<number>()\n      for (let task of this.initialSelection) {\n        if (this.selection.selected.includes(task)) {\n          // console.log(\"task \" + task.Name + \" is still selected\")\n        } else {\n          console.log(\"task \" + task.Name + \" has been unselected\")\n          unselectedTask.add(task.ID)\n          console.log(\"is unselected \" + unselectedTask.has(task.ID))\n        }\n      }\n\n      // delete the association instance\n      if (sourceInstance[this.dialogData.SourceField]) {\n        for (let associationInstance of sourceInstance[this.dialogData.SourceField]) {\n          let task = associationInstance[this.dialogData.IntermediateStructField]\n          if (unselectedTask.has(task.ID)) {\n\n            this.frontRepoService.deleteService( this.dialogData.IntermediateStruct, associationInstance )\n          }\n        }\n      }\n\n      // is the source array is emptyn create it\n      if (sourceInstance[this.dialogData.SourceField] == undefined) {\n        sourceInstance[this.dialogData.SourceField] = new Array<any>()\n      }\n\n      // second, parse all instance of the selected\n      if (sourceInstance[this.dialogData.SourceField]) {\n        this.selection.selected.forEach(\n          task => {\n            if (!this.initialSelection.includes(task)) {\n              // console.log(\"task \" + task.Name + \" has been added to the selection\")\n\n              let associationInstance = {\n                Name: sourceInstance[\"Name\"] + \"-\" + task.Name,\n              }\n\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"] = new NullInt64\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Int64 = task.ID\n              associationInstance[this.dialogData.IntermediateStructField+\"ID\"].Valid = true\n\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"] = new NullInt64\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Int64 = sourceInstance[\"ID\"]\n              associationInstance[this.dialogData.SourceStruct + \"_\" + this.dialogData.SourceField + \"DBID\"].Valid = true\n\n              this.frontRepoService.postService( this.dialogData.IntermediateStruct, associationInstance )\n\n            } else {\n              // console.log(\"task \" + task.Name + \" is still selected\")\n            }\n          }\n        )\n      }\n\n      // this.selection = new SelectionModel<TaskDB>(allowMultiSelect, this.initialSelection);\n    }\n\n    // why pizza ?\n    this.dialogRef.close('Pizza!');\n  }\n}\n","<div>\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n    </mat-form-field>\n    <h1 *ngIf=\"dialogData\">task</h1>\n    <table class=\"table\" mat-table [dataSource]=\"matTableDataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\" sticky>\n            <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <!-- insertion point for fields specific code -->\n        <!-- -->\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.Name}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"DisplayedName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> DisplayedName </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.DisplayedName}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Ressource\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Ressource </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{ Task.Ressource ? Task.Ressource.Name : ''}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Start\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Start </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.Start}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"End\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> End </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.End}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Duration\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Duration </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.Duration_string}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"PercentComplete\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> PercentComplete </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.PercentComplete.toPrecision(5)}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"Rank\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rank </th>\n            <td mat-cell *matCellDef=\"let Task\">\n                {{Task.Rank}}\n            </td>\n        </ng-container>\n        <!-- -->\n        <ng-container matColumnDef=\"GanttChart_Tasks\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> <-- (GanttChart) Tasks </th>\n            <td mat-cell *matCellDef=\"let task\">\n                {{frontRepo.GanttCharts.get(task.GanttChart_TasksDBID.Int64)?.Name}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"ID\" sticky>\n            <th mat-header-cell *matHeaderCellDef> ID. </th>\n            <td mat-cell *matCellDef=\"let Task\"> {{Task.ID}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let task;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"setEditorRouterOutlet(task.ID)\">edit</i>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let task;  let j = index;\">\n                <i class=\"material-icons\" [ngStyle]=\"{'color':'rgba(0,0,0,.50)'}\" (click)=\"deleteTask(task.ID, task)\">delete</i>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\n        <tr mat-row *matRowDef=\"\n        let row; \n        columns: displayedColumns;\n        \" (click)=\"setPresentationRouterOutlet( row.ID ) \" class=\"row-link\">\n        </tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100, 500, 1000]\" showFirstLastButtons></mat-paginator>\n</div>\n<button class=\"table__save\" color=\"primary\" *ngIf=\"dialogData\" mat-raised-button (click)=\"save()\">\n    Save\n</button>","// insertion point for imports\nimport { TaskDB } from './task-db'\n\n// usefull for managing pointer ID values that can be nullable\nimport { NullInt64 } from './front-repo.service'\n\nexport class GanttChartDB {\n\tCreatedAt?: string;\n\tDeletedAt?: string;\n\tID?: number;\n\n\t// insertion point for basic fields declarations\n\tName?: string\n\n\t// insertion point for other declarations\n\tTasks?: Array<TaskDB>\n}\n","// generated from ng_file_public_api_ts.go\n/*\n* Public API Surface of gonggooglecharts\n*/\n\nexport * from './lib/gonggooglecharts.module'\n\nexport * from './lib/splitter/splitter.component'\nexport * from './lib/sidebar/sidebar.component'\n\nexport * from './lib/front-repo.service'\nexport * from './lib/commitnb.service'\nexport * from './lib/push_from_front_nb.service'\n\n\nexport * from './lib/dependency-detail/dependency-detail.component'\nexport * from './lib/dependency-presentation/dependency-presentation.component'\nexport * from './lib/dependency-sorting/dependency-sorting.component'\nexport * from './lib/dependencys-table/dependencys-table.component'\nexport * from './lib/dependency-db'\nexport * from './lib/dependency.service'\n\nexport * from './lib/ganttchart-detail/ganttchart-detail.component'\nexport * from './lib/ganttchart-presentation/ganttchart-presentation.component'\nexport * from './lib/ganttchart-sorting/ganttchart-sorting.component'\nexport * from './lib/ganttcharts-table/ganttcharts-table.component'\nexport * from './lib/ganttchart-db'\nexport * from './lib/ganttchart.service'\n\nexport * from './lib/ressource-detail/ressource-detail.component'\nexport * from './lib/ressource-presentation/ressource-presentation.component'\nexport * from './lib/ressource-sorting/ressource-sorting.component'\nexport * from './lib/ressources-table/ressources-table.component'\nexport * from './lib/ressource-db'\nexport * from './lib/ressource.service'\n\nexport * from './lib/task-detail/task-detail.component'\nexport * from './lib/task-presentation/task-presentation.component'\nexport * from './lib/task-sorting/task-sorting.component'\nexport * from './lib/tasks-table/tasks-table.component'\nexport * from './lib/task-db'\nexport * from './lib/task.service'\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}